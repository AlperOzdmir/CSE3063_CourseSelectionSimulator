LabelingController.py: Curriculum2015 is created
LabelingController.py: Curriculum2020 is created
factory.py: Looking for locale `en_US` in provider `faker.providers.address`.
factory.py: Provider `faker.providers.address` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.automotive`.
factory.py: Provider `faker.providers.automotive` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.bank`.
factory.py: Specified locale `en_US` is not available for provider `faker.providers.bank`. Locale reset to `en_GB` for this provider.
factory.py: Looking for locale `en_US` in provider `faker.providers.barcode`.
factory.py: Provider `faker.providers.barcode` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.color`.
factory.py: Provider `faker.providers.color` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.company`.
factory.py: Provider `faker.providers.company` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.credit_card`.
factory.py: Provider `faker.providers.credit_card` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.currency`.
factory.py: Provider `faker.providers.currency` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.date_time`.
factory.py: Provider `faker.providers.date_time` has been localized to `en_US`.
factory.py: Provider `faker.providers.file` does not feature localization. Specified locale `en_US` is not utilized for this provider.
factory.py: Looking for locale `en_US` in provider `faker.providers.geo`.
factory.py: Provider `faker.providers.geo` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.internet`.
factory.py: Provider `faker.providers.internet` has been localized to `en_US`.
factory.py: Provider `faker.providers.isbn` does not feature localization. Specified locale `en_US` is not utilized for this provider.
factory.py: Looking for locale `en_US` in provider `faker.providers.job`.
factory.py: Provider `faker.providers.job` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.lorem`.
factory.py: Provider `faker.providers.lorem` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.misc`.
factory.py: Provider `faker.providers.misc` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.person`.
factory.py: Provider `faker.providers.person` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.phone_number`.
factory.py: Provider `faker.providers.phone_number` has been localized to `en_US`.
factory.py: Provider `faker.providers.profile` does not feature localization. Specified locale `en_US` is not utilized for this provider.
factory.py: Provider `faker.providers.python` does not feature localization. Specified locale `en_US` is not utilized for this provider.
factory.py: Looking for locale `en_US` in provider `faker.providers.ssn`.
factory.py: Provider `faker.providers.ssn` has been localized to `en_US`.
factory.py: Provider `faker.providers.user_agent` does not feature localization. Specified locale `en_US` is not utilized for this provider.
RandomizationController.py: Deleted all student input/output files.
RandomizationController.py: Generated student: Cynthia King with id: 150119284
RandomizationController.py: Generated student: Brandon Gonzalez with id: 150120007
RandomizationController.py: Generated student: Jason Dixon with id: 150119219
RandomizationController.py: Generated student: Keith Rivers with id: 150120578
RandomizationController.py: Generated student: Bruce Duran with id: 150118291
RandomizationController.py: Generated student: Christopher Henson with id: 150121220
RandomizationController.py: Generated student: Kelly Madden with id: 150119817
RandomizationController.py: Generated student: Christopher Bryant with id: 150119113
RandomizationController.py: Generated student: Deanna Johnson with id: 150120371
RandomizationController.py: Generated student: Chelsea Sanchez with id: 150120337
RandomizationController.py: Generated student: Sheri Carter with id: 150121431
RandomizationController.py: Generated student: Sarah Potter with id: 150120224
RandomizationController.py: Generated student: Anthony Wright with id: 150118412
RandomizationController.py: Generated student: Julie Gomez with id: 150118817
RandomizationController.py: Generated student: Christina Kent with id: 150120151
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
LabelingController.py: advisor created Murat Can Ganiz is created
LabelingController.py: advisor created Mustafa Ağaoğlu is created
LabelingController.py: advisor created Betül Boz is created
LabelingController.py: advisor created Çiğdem Eroğlu Erdem is created
LabelingController.py: advisor created Müjdat Soytürk is created
LabelingController.py: advisor created Ali Fuat Alkaya is created
LabelingController.py: advisor created Haluk Rahmi Topçuoğlu is created
LabelingController.py: advisor created Borahan Tümer is created
LabelingController.py: advisor created Ömer Korçak is created
LabelingController.py: advisor created Ali Haydar Özer is created
LabelingController.py: advisor created Sanem Arslan is created
LabelingController.py: advisor created Mehmet Baran is created
LabelingController.py: advisor created Fatma Corut is created
LabelingController.py: Curriculum2015 is created
LabelingController.py: Curriculum2020 is created
factory.py: Looking for locale `en_US` in provider `faker.providers.address`.
factory.py: Provider `faker.providers.address` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.automotive`.
factory.py: Provider `faker.providers.automotive` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.bank`.
factory.py: Specified locale `en_US` is not available for provider `faker.providers.bank`. Locale reset to `en_GB` for this provider.
factory.py: Looking for locale `en_US` in provider `faker.providers.barcode`.
factory.py: Provider `faker.providers.barcode` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.color`.
factory.py: Provider `faker.providers.color` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.company`.
factory.py: Provider `faker.providers.company` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.credit_card`.
factory.py: Provider `faker.providers.credit_card` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.currency`.
factory.py: Provider `faker.providers.currency` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.date_time`.
factory.py: Provider `faker.providers.date_time` has been localized to `en_US`.
factory.py: Provider `faker.providers.file` does not feature localization. Specified locale `en_US` is not utilized for this provider.
factory.py: Looking for locale `en_US` in provider `faker.providers.geo`.
factory.py: Provider `faker.providers.geo` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.internet`.
factory.py: Provider `faker.providers.internet` has been localized to `en_US`.
factory.py: Provider `faker.providers.isbn` does not feature localization. Specified locale `en_US` is not utilized for this provider.
factory.py: Looking for locale `en_US` in provider `faker.providers.job`.
factory.py: Provider `faker.providers.job` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.lorem`.
factory.py: Provider `faker.providers.lorem` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.misc`.
factory.py: Provider `faker.providers.misc` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.person`.
factory.py: Provider `faker.providers.person` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.phone_number`.
factory.py: Provider `faker.providers.phone_number` has been localized to `en_US`.
factory.py: Provider `faker.providers.profile` does not feature localization. Specified locale `en_US` is not utilized for this provider.
factory.py: Provider `faker.providers.python` does not feature localization. Specified locale `en_US` is not utilized for this provider.
factory.py: Looking for locale `en_US` in provider `faker.providers.ssn`.
factory.py: Provider `faker.providers.ssn` has been localized to `en_US`.
factory.py: Provider `faker.providers.user_agent` does not feature localization. Specified locale `en_US` is not utilized for this provider.
RandomizationController.py: Deleted all student input/output files.
RandomizationController.py: Generated student: Gary Bass with id: 150119615
RandomizationController.py: Generated trancript for student id: 150119615
RandomizationController.py: Generated student: Johnny Sullivan with id: 150121226
RandomizationController.py: Generated trancript for student id: 150121226
RandomizationController.py: Generated student: Nicholas Martin with id: 150119234
RandomizationController.py: Generated trancript for student id: 150119234
RandomizationController.py: Generated student: Tiffany Moore with id: 150120892
RandomizationController.py: Generated trancript for student id: 150120892
RandomizationController.py: Generated student: Eric Sims with id: 150119372
RandomizationController.py: Generated trancript for student id: 150119372
RandomizationController.py: Generated student: Kimberly Lee with id: 150120898
RandomizationController.py: Generated trancript for student id: 150120898
RandomizationController.py: Generated student: Chad Smith with id: 150119586
RandomizationController.py: Generated trancript for student id: 150119586
RandomizationController.py: Generated student: Kimberly Ball with id: 150118281
RandomizationController.py: Generated trancript for student id: 150118281
RandomizationController.py: Generated student: Ronald Johnson with id: 150119013
RandomizationController.py: Generated trancript for student id: 150119013
RandomizationController.py: Generated student: Alicia Lee with id: 150118856
RandomizationController.py: Generated trancript for student id: 150118856
RandomizationController.py: Generated student: Natalie Kline with id: 150121388
RandomizationController.py: Generated trancript for student id: 150121388
RandomizationController.py: Generated student: Jason Green with id: 150121040
RandomizationController.py: Generated trancript for student id: 150121040
RandomizationController.py: Generated student: Jeffrey Green with id: 150121008
RandomizationController.py: Generated trancript for student id: 150121008
RandomizationController.py: Generated student: Anthony Hudson with id: 150119186
RandomizationController.py: Generated trancript for student id: 150119186
RandomizationController.py: Generated student: David Norman with id: 150119059
RandomizationController.py: Generated trancript for student id: 150119059
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
LabelingController.py: advisor created Murat Can Ganiz is created
LabelingController.py: advisor created Mustafa Ağaoğlu is created
LabelingController.py: advisor created Betül Boz is created
LabelingController.py: advisor created Çiğdem Eroğlu Erdem is created
LabelingController.py: advisor created Müjdat Soytürk is created
LabelingController.py: advisor created Ali Fuat Alkaya is created
LabelingController.py: advisor created Haluk Rahmi Topçuoğlu is created
LabelingController.py: advisor created Borahan Tümer is created
LabelingController.py: advisor created Ömer Korçak is created
LabelingController.py: advisor created Ali Haydar Özer is created
LabelingController.py: advisor created Sanem Arslan is created
LabelingController.py: advisor created Mehmet Baran is created
LabelingController.py: advisor created Fatma Corut is created
LabelingController.py: Curriculum2015 is created
LabelingController.py: Curriculum2020 is created
factory.py: Looking for locale `en_US` in provider `faker.providers.address`.
factory.py: Provider `faker.providers.address` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.automotive`.
factory.py: Provider `faker.providers.automotive` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.bank`.
factory.py: Specified locale `en_US` is not available for provider `faker.providers.bank`. Locale reset to `en_GB` for this provider.
factory.py: Looking for locale `en_US` in provider `faker.providers.barcode`.
factory.py: Provider `faker.providers.barcode` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.color`.
factory.py: Provider `faker.providers.color` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.company`.
factory.py: Provider `faker.providers.company` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.credit_card`.
factory.py: Provider `faker.providers.credit_card` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.currency`.
factory.py: Provider `faker.providers.currency` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.date_time`.
factory.py: Provider `faker.providers.date_time` has been localized to `en_US`.
factory.py: Provider `faker.providers.file` does not feature localization. Specified locale `en_US` is not utilized for this provider.
factory.py: Looking for locale `en_US` in provider `faker.providers.geo`.
factory.py: Provider `faker.providers.geo` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.internet`.
factory.py: Provider `faker.providers.internet` has been localized to `en_US`.
factory.py: Provider `faker.providers.isbn` does not feature localization. Specified locale `en_US` is not utilized for this provider.
factory.py: Looking for locale `en_US` in provider `faker.providers.job`.
factory.py: Provider `faker.providers.job` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.lorem`.
factory.py: Provider `faker.providers.lorem` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.misc`.
factory.py: Provider `faker.providers.misc` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.person`.
factory.py: Provider `faker.providers.person` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.phone_number`.
factory.py: Provider `faker.providers.phone_number` has been localized to `en_US`.
factory.py: Provider `faker.providers.profile` does not feature localization. Specified locale `en_US` is not utilized for this provider.
factory.py: Provider `faker.providers.python` does not feature localization. Specified locale `en_US` is not utilized for this provider.
factory.py: Looking for locale `en_US` in provider `faker.providers.ssn`.
factory.py: Provider `faker.providers.ssn` has been localized to `en_US`.
factory.py: Provider `faker.providers.user_agent` does not feature localization. Specified locale `en_US` is not utilized for this provider.
RandomizationController.py: Deleted all student input/output files.
RandomizationController.py: Generated student: Kayla Allen with id: 150118213
RandomizationController.py: Generated trancript for student id: 150118213
RandomizationController.py: Generated student: Jennifer Williams with id: 150118522
RandomizationController.py: Generated trancript for student id: 150118522
RandomizationController.py: Generated student: Brittany Thomas with id: 150119835
RandomizationController.py: Generated trancript for student id: 150119835
RandomizationController.py: Generated student: Denise Hayden with id: 150120006
RandomizationController.py: Generated trancript for student id: 150120006
RandomizationController.py: Generated student: Jessica Wood with id: 150120380
RandomizationController.py: Generated trancript for student id: 150120380
RandomizationController.py: Generated student: Shelby Peck with id: 150118683
RandomizationController.py: Generated trancript for student id: 150118683
RandomizationController.py: Generated student: Clayton Patton with id: 150121453
RandomizationController.py: Generated trancript for student id: 150121453
RandomizationController.py: Generated student: Andrew Johnson with id: 150120887
RandomizationController.py: Generated trancript for student id: 150120887
RandomizationController.py: Generated student: Tonya Walsh with id: 150121008
RandomizationController.py: Generated trancript for student id: 150121008
RandomizationController.py: Generated student: William Jones with id: 150118480
RandomizationController.py: Generated trancript for student id: 150118480
RandomizationController.py: Generated student: Juan Miller with id: 150120528
RandomizationController.py: Generated trancript for student id: 150120528
RandomizationController.py: Generated student: Laurie Velasquez with id: 150121739
RandomizationController.py: Generated trancript for student id: 150121739
RandomizationController.py: Generated student: Nicholas Ramsey with id: 150120772
RandomizationController.py: Generated trancript for student id: 150120772
RandomizationController.py: Generated student: Michael Edwards with id: 150118000
RandomizationController.py: Generated trancript for student id: 150118000
RandomizationController.py: Generated student: Curtis Ortiz with id: 150121792
RandomizationController.py: Generated trancript for student id: 150121792
RandomizationController.py: Generated student: David Clark with id: 150119774
RandomizationController.py: Generated trancript for student id: 150119774
RandomizationController.py: Generated student: Stephanie Patterson with id: 150118184
RandomizationController.py: Generated trancript for student id: 150118184
RandomizationController.py: Generated student: Brianna Gonzalez with id: 150118174
RandomizationController.py: Generated trancript for student id: 150118174
RandomizationController.py: Generated student: Sara Simpson with id: 150119142
RandomizationController.py: Generated trancript for student id: 150119142
RandomizationController.py: Generated student: Robert Hall with id: 150118541
RandomizationController.py: Generated trancript for student id: 150118541
RandomizationController.py: Generated student: Joshua Moran with id: 150121658
RandomizationController.py: Generated trancript for student id: 150121658
RandomizationController.py: Generated student: Andrew Finley with id: 150119027
RandomizationController.py: Generated trancript for student id: 150119027
RandomizationController.py: Generated student: Eric Allen with id: 150119363
RandomizationController.py: Generated trancript for student id: 150119363
RandomizationController.py: Generated student: Brenda Sanders with id: 150121289
RandomizationController.py: Generated trancript for student id: 150121289
RandomizationController.py: Generated student: Samuel Williams with id: 150120284
RandomizationController.py: Generated trancript for student id: 150120284
RandomizationController.py: Generated student: Matthew Manning with id: 150118913
RandomizationController.py: Generated trancript for student id: 150118913
RandomizationController.py: Generated student: Lisa Perry with id: 150119257
RandomizationController.py: Generated trancript for student id: 150119257
RandomizationController.py: Generated student: Laura Green with id: 150120298
RandomizationController.py: Generated trancript for student id: 150120298
RandomizationController.py: Generated student: Steven Brown with id: 150120925
RandomizationController.py: Generated trancript for student id: 150120925
RandomizationController.py: Generated student: Stephanie Ryan with id: 150120163
RandomizationController.py: Generated trancript for student id: 150120163
RandomizationController.py: Generated student: Joshua Gardner with id: 150121758
RandomizationController.py: Generated trancript for student id: 150121758
RandomizationController.py: Generated student: Sandra Martinez with id: 150120608
RandomizationController.py: Generated trancript for student id: 150120608
RandomizationController.py: Generated student: Sherry Heath with id: 150121291
RandomizationController.py: Generated trancript for student id: 150121291
RandomizationController.py: Generated student: Kevin Dominguez with id: 150120062
RandomizationController.py: Generated trancript for student id: 150120062
RandomizationController.py: Generated student: Ronnie Warren with id: 150118994
RandomizationController.py: Generated trancript for student id: 150118994
RandomizationController.py: Generated student: Jason Hooper with id: 150118924
RandomizationController.py: Generated trancript for student id: 150118924
RandomizationController.py: Generated student: Monica Conrad with id: 150119115
RandomizationController.py: Generated trancript for student id: 150119115
RandomizationController.py: Generated student: John Hall with id: 150121933
RandomizationController.py: Generated trancript for student id: 150121933
RandomizationController.py: Generated student: Jason Mcneil with id: 150119523
RandomizationController.py: Generated trancript for student id: 150119523
RandomizationController.py: Generated student: Victoria Kim with id: 150121867
RandomizationController.py: Generated trancript for student id: 150121867
RandomizationController.py: Generated student: Emily Wright with id: 150118013
RandomizationController.py: Generated trancript for student id: 150118013
RandomizationController.py: Generated student: Patrick Brown with id: 150119799
RandomizationController.py: Generated trancript for student id: 150119799
RandomizationController.py: Generated student: Anthony Clark with id: 150119775
RandomizationController.py: Generated trancript for student id: 150119775
RandomizationController.py: Generated student: Shirley Donovan with id: 150121691
RandomizationController.py: Generated trancript for student id: 150121691
RandomizationController.py: Generated student: Michael Gonzalez with id: 150118197
RandomizationController.py: Generated trancript for student id: 150118197
RandomizationController.py: Generated student: Juan Henry with id: 150121306
RandomizationController.py: Generated trancript for student id: 150121306
RandomizationController.py: Generated student: Maureen Everett with id: 150118240
RandomizationController.py: Generated trancript for student id: 150118240
RandomizationController.py: Generated student: Clayton Benton with id: 150119726
RandomizationController.py: Generated trancript for student id: 150119726
RandomizationController.py: Generated student: Billy Chaney with id: 150120303
RandomizationController.py: Generated trancript for student id: 150120303
RandomizationController.py: Generated student: Tammy Cooley with id: 150118975
RandomizationController.py: Generated trancript for student id: 150118975
RandomizationController.py: Generated student: Samantha Carter with id: 150119280
RandomizationController.py: Generated trancript for student id: 150119280
RandomizationController.py: Generated student: Michael Baker with id: 150119181
RandomizationController.py: Generated trancript for student id: 150119181
RandomizationController.py: Generated student: Leonard Whitaker with id: 150120192
RandomizationController.py: Generated trancript for student id: 150120192
RandomizationController.py: Generated student: Brian Jackson with id: 150120457
RandomizationController.py: Generated trancript for student id: 150120457
RandomizationController.py: Generated student: Sherri Martinez with id: 150119672
RandomizationController.py: Generated trancript for student id: 150119672
RandomizationController.py: Generated student: Sarah Byrd with id: 150120666
RandomizationController.py: Generated trancript for student id: 150120666
RandomizationController.py: Generated student: Catherine Villarreal with id: 150118457
RandomizationController.py: Generated trancript for student id: 150118457
RandomizationController.py: Generated student: Cheryl Hartman with id: 150118170
RandomizationController.py: Generated trancript for student id: 150118170
RandomizationController.py: Generated student: Cheryl Martin with id: 150120480
RandomizationController.py: Generated trancript for student id: 150120480
RandomizationController.py: Generated student: Kimberly Suarez with id: 150121432
RandomizationController.py: Generated trancript for student id: 150121432
RandomizationController.py: Generated student: Emily Mills with id: 150118719
RandomizationController.py: Generated trancript for student id: 150118719
RandomizationController.py: Generated student: Heather Richard with id: 150118344
RandomizationController.py: Generated trancript for student id: 150118344
RandomizationController.py: Generated student: Cassidy Barber with id: 150120247
RandomizationController.py: Generated trancript for student id: 150120247
RandomizationController.py: Generated student: Debra Ingram with id: 150120548
RandomizationController.py: Generated trancript for student id: 150120548
RandomizationController.py: Generated student: Megan Jones with id: 150119153
RandomizationController.py: Generated trancript for student id: 150119153
RandomizationController.py: Generated student: Kevin Miller with id: 150118589
RandomizationController.py: Generated trancript for student id: 150118589
RandomizationController.py: Generated student: Jason Sherman with id: 150119430
RandomizationController.py: Generated trancript for student id: 150119430
RandomizationController.py: Generated student: Sheryl Morgan with id: 150120644
RandomizationController.py: Generated trancript for student id: 150120644
RandomizationController.py: Generated student: William Evans with id: 150119908
RandomizationController.py: Generated trancript for student id: 150119908
RandomizationController.py: Generated student: Mark Poole with id: 150120628
RandomizationController.py: Generated trancript for student id: 150120628
RandomizationController.py: Generated student: Paul Hunter with id: 150120598
RandomizationController.py: Generated trancript for student id: 150120598
RandomizationController.py: Generated student: Sarah Mcdaniel with id: 150120384
RandomizationController.py: Generated trancript for student id: 150120384
RandomizationController.py: Generated student: Jessica Taylor with id: 150118247
RandomizationController.py: Generated trancript for student id: 150118247
RandomizationController.py: Generated student: Christian Moore with id: 150118889
RandomizationController.py: Generated trancript for student id: 150118889
RandomizationController.py: Generated student: Paul Sanders with id: 150119406
RandomizationController.py: Generated trancript for student id: 150119406
RandomizationController.py: Generated student: Nicole Green with id: 150119032
RandomizationController.py: Generated trancript for student id: 150119032
RandomizationController.py: Generated student: Eric Payne with id: 150121372
RandomizationController.py: Generated trancript for student id: 150121372
RandomizationController.py: Generated student: Patricia Higgins with id: 150118010
RandomizationController.py: Generated trancript for student id: 150118010
RandomizationController.py: Generated student: Daniel Jackson with id: 150119503
RandomizationController.py: Generated trancript for student id: 150119503
RandomizationController.py: Generated student: Karen Yang with id: 150121716
RandomizationController.py: Generated trancript for student id: 150121716
RandomizationController.py: Generated student: Roy Garrett with id: 150120973
RandomizationController.py: Generated trancript for student id: 150120973
RandomizationController.py: Generated student: Jonathan James with id: 150120675
RandomizationController.py: Generated trancript for student id: 150120675
RandomizationController.py: Generated student: Taylor Lopez with id: 150118218
RandomizationController.py: Generated trancript for student id: 150118218
RandomizationController.py: Generated student: Alyssa Mckay with id: 150120199
RandomizationController.py: Generated trancript for student id: 150120199
RandomizationController.py: Generated student: Wesley Banks with id: 150119488
RandomizationController.py: Generated trancript for student id: 150119488
RandomizationController.py: Generated student: Elizabeth Santiago with id: 150118687
RandomizationController.py: Generated trancript for student id: 150118687
RandomizationController.py: Generated student: Steven Gutierrez with id: 150119218
RandomizationController.py: Generated trancript for student id: 150119218
RandomizationController.py: Generated student: Shane Rodriguez with id: 150118441
RandomizationController.py: Generated trancript for student id: 150118441
RandomizationController.py: Generated student: Alicia Navarro with id: 150119389
RandomizationController.py: Generated trancript for student id: 150119389
RandomizationController.py: Generated student: Cynthia Simpson with id: 150119027
RandomizationController.py: Generated trancript for student id: 150119027
RandomizationController.py: Generated student: Laura Williams with id: 150120529
RandomizationController.py: Generated trancript for student id: 150120529
RandomizationController.py: Generated student: Amanda Baker with id: 150120727
RandomizationController.py: Generated trancript for student id: 150120727
RandomizationController.py: Generated student: Stephanie Bauer with id: 150120113
RandomizationController.py: Generated trancript for student id: 150120113
RandomizationController.py: Generated student: Alex Kim with id: 150121933
RandomizationController.py: Generated trancript for student id: 150121933
RandomizationController.py: Generated student: Ashley Thompson with id: 150118671
RandomizationController.py: Generated trancript for student id: 150118671
RandomizationController.py: Generated student: Nicole Young with id: 150119273
RandomizationController.py: Generated trancript for student id: 150119273
RandomizationController.py: Generated student: Eric Jennings with id: 150118008
RandomizationController.py: Generated trancript for student id: 150118008
RandomizationController.py: Generated student: James Bailey with id: 150118124
RandomizationController.py: Generated trancript for student id: 150118124
RandomizationController.py: Generated student: Dennis Coffey with id: 150121205
RandomizationController.py: Generated trancript for student id: 150121205
RandomizationController.py: Generated student: Andrew Stein with id: 150121387
RandomizationController.py: Generated trancript for student id: 150121387
RandomizationController.py: Generated student: Zachary Mora with id: 150119057
RandomizationController.py: Generated trancript for student id: 150119057
RandomizationController.py: Generated student: Jacqueline Martin with id: 150118677
RandomizationController.py: Generated trancript for student id: 150118677
RandomizationController.py: Generated student: Sara Nelson with id: 150120230
RandomizationController.py: Generated trancript for student id: 150120230
RandomizationController.py: Generated student: Bruce Thompson with id: 150120191
RandomizationController.py: Generated trancript for student id: 150120191
RandomizationController.py: Generated student: Todd Mills with id: 150119201
RandomizationController.py: Generated trancript for student id: 150119201
RandomizationController.py: Generated student: Billy Frye with id: 150119901
RandomizationController.py: Generated trancript for student id: 150119901
RandomizationController.py: Generated student: Stacy Hudson with id: 150118111
RandomizationController.py: Generated trancript for student id: 150118111
RandomizationController.py: Generated student: William Ford with id: 150120737
RandomizationController.py: Generated trancript for student id: 150120737
RandomizationController.py: Generated student: Melinda Sullivan with id: 150119115
RandomizationController.py: Generated trancript for student id: 150119115
RandomizationController.py: Generated student: Ashley White with id: 150121017
RandomizationController.py: Generated trancript for student id: 150121017
RandomizationController.py: Generated student: Erik Carter with id: 150120902
RandomizationController.py: Generated trancript for student id: 150120902
RandomizationController.py: Generated student: Timothy Sherman with id: 150119266
RandomizationController.py: Generated trancript for student id: 150119266
RandomizationController.py: Generated student: Mark Martinez with id: 150121041
RandomizationController.py: Generated trancript for student id: 150121041
RandomizationController.py: Generated student: Ashley Johnston with id: 150119647
RandomizationController.py: Generated trancript for student id: 150119647
RandomizationController.py: Generated student: Roger Phillips with id: 150120079
RandomizationController.py: Generated trancript for student id: 150120079
RandomizationController.py: Generated student: Shelly Weiss with id: 150118247
RandomizationController.py: Generated trancript for student id: 150118247
RandomizationController.py: Generated student: Katherine Mendez with id: 150118752
RandomizationController.py: Generated trancript for student id: 150118752
RandomizationController.py: Generated student: Anna Hardy with id: 150120459
RandomizationController.py: Generated trancript for student id: 150120459
RandomizationController.py: Generated student: Scott Wyatt with id: 150121889
RandomizationController.py: Generated trancript for student id: 150121889
RandomizationController.py: Generated student: Susan Hall with id: 150121512
RandomizationController.py: Generated trancript for student id: 150121512
RandomizationController.py: Generated student: Michael Sanchez with id: 150119264
RandomizationController.py: Generated trancript for student id: 150119264
RandomizationController.py: Generated student: Danielle Ibarra with id: 150121066
RandomizationController.py: Generated trancript for student id: 150121066
RandomizationController.py: Generated student: Kristin Morris with id: 150119065
RandomizationController.py: Generated trancript for student id: 150119065
RandomizationController.py: Generated student: Rachel Smith with id: 150120363
RandomizationController.py: Generated trancript for student id: 150120363
RandomizationController.py: Generated student: Daniel Ellis with id: 150118973
RandomizationController.py: Generated trancript for student id: 150118973
RandomizationController.py: Generated student: Brandon West with id: 150121531
RandomizationController.py: Generated trancript for student id: 150121531
RandomizationController.py: Generated student: Erica Wagner with id: 150119185
RandomizationController.py: Generated trancript for student id: 150119185
RandomizationController.py: Generated student: Molly Blankenship with id: 150120278
RandomizationController.py: Generated trancript for student id: 150120278
RandomizationController.py: Generated student: Michael Mcfarland with id: 150118763
RandomizationController.py: Generated trancript for student id: 150118763
RandomizationController.py: Generated student: Tracy Davis with id: 150118315
RandomizationController.py: Generated trancript for student id: 150118315
RandomizationController.py: Generated student: Thomas Ruiz with id: 150118060
RandomizationController.py: Generated trancript for student id: 150118060
RandomizationController.py: Generated student: Penny Thomas with id: 150119717
RandomizationController.py: Generated trancript for student id: 150119717
RandomizationController.py: Generated student: Robert Lewis with id: 150121255
RandomizationController.py: Generated trancript for student id: 150121255
RandomizationController.py: Generated student: Patrick Powers with id: 150118883
RandomizationController.py: Generated trancript for student id: 150118883
RandomizationController.py: Generated student: Adam Barber with id: 150119129
RandomizationController.py: Generated trancript for student id: 150119129
RandomizationController.py: Generated student: Melanie Mills with id: 150120406
RandomizationController.py: Generated trancript for student id: 150120406
RandomizationController.py: Generated student: Robert Conner with id: 150121523
RandomizationController.py: Generated trancript for student id: 150121523
RandomizationController.py: Generated student: Richard Stewart with id: 150121150
RandomizationController.py: Generated trancript for student id: 150121150
RandomizationController.py: Generated student: David Figueroa with id: 150121900
RandomizationController.py: Generated trancript for student id: 150121900
RandomizationController.py: Generated student: Catherine Reed with id: 150119648
RandomizationController.py: Generated trancript for student id: 150119648
RandomizationController.py: Generated student: Stacie Williams with id: 150121230
RandomizationController.py: Generated trancript for student id: 150121230
RandomizationController.py: Generated student: Maurice Welch with id: 150119615
RandomizationController.py: Generated trancript for student id: 150119615
RandomizationController.py: Generated student: Nathaniel Bird with id: 150120878
RandomizationController.py: Generated trancript for student id: 150120878
RandomizationController.py: Generated student: William Montoya with id: 150119811
RandomizationController.py: Generated trancript for student id: 150119811
RandomizationController.py: Generated student: Kevin Perez with id: 150119589
RandomizationController.py: Generated trancript for student id: 150119589
RandomizationController.py: Generated student: Sherri Wood with id: 150119383
RandomizationController.py: Generated trancript for student id: 150119383
RandomizationController.py: Generated student: David Wilkerson with id: 150119790
RandomizationController.py: Generated trancript for student id: 150119790
RandomizationController.py: Generated student: Charles Fitzgerald with id: 150118429
RandomizationController.py: Generated trancript for student id: 150118429
RandomizationController.py: Generated student: Catherine Floyd with id: 150118647
RandomizationController.py: Generated trancript for student id: 150118647
RandomizationController.py: Generated student: Jean Beck with id: 150120343
RandomizationController.py: Generated trancript for student id: 150120343
RandomizationController.py: Generated student: Justin Heath with id: 150121725
RandomizationController.py: Generated trancript for student id: 150121725
RandomizationController.py: Generated student: Sylvia Wilson with id: 150118022
RandomizationController.py: Generated trancript for student id: 150118022
RandomizationController.py: Generated student: Sandra Cox with id: 150119012
RandomizationController.py: Generated trancript for student id: 150119012
RandomizationController.py: Generated student: Jennifer Owens with id: 150121705
RandomizationController.py: Generated trancript for student id: 150121705
RandomizationController.py: Generated student: Jacob Vasquez with id: 150119720
RandomizationController.py: Generated trancript for student id: 150119720
RandomizationController.py: Generated student: Kevin Rush with id: 150121510
RandomizationController.py: Generated trancript for student id: 150121510
RandomizationController.py: Generated student: Erin Rodriguez with id: 150121793
RandomizationController.py: Generated trancript for student id: 150121793
RandomizationController.py: Generated student: Donald Moon with id: 150119836
RandomizationController.py: Generated trancript for student id: 150119836
RandomizationController.py: Generated student: Jodi Gonzalez with id: 150118914
RandomizationController.py: Generated trancript for student id: 150118914
RandomizationController.py: Generated student: Brian Williams with id: 150120173
RandomizationController.py: Generated trancript for student id: 150120173
RandomizationController.py: Generated student: Caitlin Howard with id: 150120345
RandomizationController.py: Generated trancript for student id: 150120345
RandomizationController.py: Generated student: Andrea Cardenas with id: 150119505
RandomizationController.py: Generated trancript for student id: 150119505
RandomizationController.py: Generated student: Alexander Miller with id: 150120796
RandomizationController.py: Generated trancript for student id: 150120796
RandomizationController.py: Generated student: John Fitzgerald with id: 150119911
RandomizationController.py: Generated trancript for student id: 150119911
RandomizationController.py: Generated student: Corey Ramirez with id: 150121945
RandomizationController.py: Generated trancript for student id: 150121945
RandomizationController.py: Generated student: Gregory Martin with id: 150118031
RandomizationController.py: Generated trancript for student id: 150118031
RandomizationController.py: Generated student: William Warner with id: 150118086
RandomizationController.py: Generated trancript for student id: 150118086
RandomizationController.py: Generated student: Victoria Jones with id: 150120335
RandomizationController.py: Generated trancript for student id: 150120335
RandomizationController.py: Generated student: Scott Lopez with id: 150120275
RandomizationController.py: Generated trancript for student id: 150120275
RandomizationController.py: Generated student: Peter Wright with id: 150120388
RandomizationController.py: Generated trancript for student id: 150120388
RandomizationController.py: Generated student: Joe Gonzalez with id: 150121758
RandomizationController.py: Generated trancript for student id: 150121758
RandomizationController.py: Generated student: Adam Garcia with id: 150119181
RandomizationController.py: Generated trancript for student id: 150119181
RandomizationController.py: Generated student: Stephanie Johnson with id: 150120528
RandomizationController.py: Generated trancript for student id: 150120528
RandomizationController.py: Generated student: Mikayla Mathews with id: 150121660
RandomizationController.py: Generated trancript for student id: 150121660
RandomizationController.py: Generated student: Kristi Davidson with id: 150118940
RandomizationController.py: Generated trancript for student id: 150118940
RandomizationController.py: Generated student: Christopher Thompson with id: 150118835
RandomizationController.py: Generated trancript for student id: 150118835
RandomizationController.py: Generated student: Kaitlyn Morgan with id: 150118234
RandomizationController.py: Generated trancript for student id: 150118234
RandomizationController.py: Generated student: Andrea Smith with id: 150121087
RandomizationController.py: Generated trancript for student id: 150121087
RandomizationController.py: Generated student: Melissa Vang with id: 150118659
RandomizationController.py: Generated trancript for student id: 150118659
RandomizationController.py: Generated student: Christina Landry with id: 150119055
RandomizationController.py: Generated trancript for student id: 150119055
RandomizationController.py: Generated student: Melissa Miller with id: 150119809
RandomizationController.py: Generated trancript for student id: 150119809
RandomizationController.py: Generated student: Meghan Diaz with id: 150119065
RandomizationController.py: Generated trancript for student id: 150119065
RandomizationController.py: Generated student: Cathy Wilson with id: 150119396
RandomizationController.py: Generated trancript for student id: 150119396
RandomizationController.py: Generated student: Shawn Brown with id: 150120333
RandomizationController.py: Generated trancript for student id: 150120333
RandomizationController.py: Generated student: Erik Moore with id: 150121822
RandomizationController.py: Generated trancript for student id: 150121822
RandomizationController.py: Generated student: Antonio Parsons with id: 150118604
RandomizationController.py: Generated trancript for student id: 150118604
RandomizationController.py: Generated student: David Chavez with id: 150118921
RandomizationController.py: Generated trancript for student id: 150118921
RandomizationController.py: Generated student: Morgan Bradley with id: 150119882
RandomizationController.py: Generated trancript for student id: 150119882
RandomizationController.py: Generated student: William Long with id: 150121329
RandomizationController.py: Generated trancript for student id: 150121329
RandomizationController.py: Generated student: Joshua Lopez with id: 150119215
RandomizationController.py: Generated trancript for student id: 150119215
RandomizationController.py: Generated student: Samantha Gould with id: 150119164
RandomizationController.py: Generated trancript for student id: 150119164
RandomizationController.py: Generated student: Wendy Ward with id: 150119054
RandomizationController.py: Generated trancript for student id: 150119054
RandomizationController.py: Generated student: Aaron Jones with id: 150118090
RandomizationController.py: Generated trancript for student id: 150118090
RandomizationController.py: Generated student: Carlos Harris with id: 150118872
RandomizationController.py: Generated trancript for student id: 150118872
RandomizationController.py: Generated student: Jermaine Walter with id: 150120527
RandomizationController.py: Generated trancript for student id: 150120527
RandomizationController.py: Generated student: Brian Harris with id: 150118070
RandomizationController.py: Generated trancript for student id: 150118070
RandomizationController.py: Generated student: Lisa Gill with id: 150120527
RandomizationController.py: Generated trancript for student id: 150120527
RandomizationController.py: Generated student: Valerie Hill with id: 150120762
RandomizationController.py: Generated trancript for student id: 150120762
RandomizationController.py: Generated student: Jeanne Stephens with id: 150119334
RandomizationController.py: Generated trancript for student id: 150119334
RandomizationController.py: Generated student: Pam Griffin with id: 150118140
RandomizationController.py: Generated trancript for student id: 150118140
RandomizationController.py: Generated student: Nathan Mitchell with id: 150119021
RandomizationController.py: Generated trancript for student id: 150119021
RandomizationController.py: Generated student: Douglas Valencia with id: 150118347
RandomizationController.py: Generated trancript for student id: 150118347
RandomizationController.py: Generated student: Kathleen Bowman with id: 150121470
RandomizationController.py: Generated trancript for student id: 150121470
RandomizationController.py: Generated student: Samuel Robinson with id: 150118627
RandomizationController.py: Generated trancript for student id: 150118627
RandomizationController.py: Generated student: Sean Mckay with id: 150120794
RandomizationController.py: Generated trancript for student id: 150120794
RandomizationController.py: Generated student: Alison Roberts with id: 150120034
RandomizationController.py: Generated trancript for student id: 150120034
RandomizationController.py: Generated student: Erik Ortiz with id: 150121585
RandomizationController.py: Generated trancript for student id: 150121585
RandomizationController.py: Generated student: David Brown with id: 150119295
RandomizationController.py: Generated trancript for student id: 150119295
RandomizationController.py: Generated student: Bonnie Henderson with id: 150121875
RandomizationController.py: Generated trancript for student id: 150121875
RandomizationController.py: Generated student: Michael Flores with id: 150119209
RandomizationController.py: Generated trancript for student id: 150119209
RandomizationController.py: Generated student: Michael White with id: 150119257
RandomizationController.py: Generated trancript for student id: 150119257
RandomizationController.py: Generated student: Michael Caldwell with id: 150121001
RandomizationController.py: Generated trancript for student id: 150121001
RandomizationController.py: Generated student: Michael Sanchez with id: 150121480
RandomizationController.py: Generated trancript for student id: 150121480
RandomizationController.py: Generated student: Lori Underwood with id: 150121182
RandomizationController.py: Generated trancript for student id: 150121182
RandomizationController.py: Generated student: Nicole Hanson with id: 150119065
RandomizationController.py: Generated trancript for student id: 150119065
RandomizationController.py: Generated student: Michelle Hunter with id: 150119988
RandomizationController.py: Generated trancript for student id: 150119988
RandomizationController.py: Generated student: Shane Lewis with id: 150118900
RandomizationController.py: Generated trancript for student id: 150118900
RandomizationController.py: Generated student: Richard Terry with id: 150120090
RandomizationController.py: Generated trancript for student id: 150120090
RandomizationController.py: Generated student: Michelle Perry with id: 150119961
RandomizationController.py: Generated trancript for student id: 150119961
RandomizationController.py: Generated student: Joshua Roberts with id: 150120084
RandomizationController.py: Generated trancript for student id: 150120084
RandomizationController.py: Generated student: Christina Greene with id: 150119132
RandomizationController.py: Generated trancript for student id: 150119132
RandomizationController.py: Generated student: Michael Branch with id: 150121387
RandomizationController.py: Generated trancript for student id: 150121387
RandomizationController.py: Generated student: Crystal Meyer with id: 150120904
RandomizationController.py: Generated trancript for student id: 150120904
RandomizationController.py: Generated student: Kevin Sloan with id: 150119415
RandomizationController.py: Generated trancript for student id: 150119415
RandomizationController.py: Generated student: Lisa Morris with id: 150118017
RandomizationController.py: Generated trancript for student id: 150118017
RandomizationController.py: Generated student: Regina Riley with id: 150120489
RandomizationController.py: Generated trancript for student id: 150120489
RandomizationController.py: Generated student: Daniel Diaz with id: 150119072
RandomizationController.py: Generated trancript for student id: 150119072
RandomizationController.py: Generated student: Kelly Salazar with id: 150118471
RandomizationController.py: Generated trancript for student id: 150118471
RandomizationController.py: Generated student: Austin Davis with id: 150119095
RandomizationController.py: Generated trancript for student id: 150119095
RandomizationController.py: Generated student: Laura Ford with id: 150120016
RandomizationController.py: Generated trancript for student id: 150120016
RandomizationController.py: Generated student: David Beard with id: 150121333
RandomizationController.py: Generated trancript for student id: 150121333
RandomizationController.py: Generated student: Darren Johnson with id: 150120190
RandomizationController.py: Generated trancript for student id: 150120190
RandomizationController.py: Generated student: Kristin Martin with id: 150118193
RandomizationController.py: Generated trancript for student id: 150118193
RandomizationController.py: Generated student: Elizabeth Johnson with id: 150120596
RandomizationController.py: Generated trancript for student id: 150120596
RandomizationController.py: Generated student: Luis White with id: 150119509
RandomizationController.py: Generated trancript for student id: 150119509
RandomizationController.py: Generated student: Joshua Vincent with id: 150120824
RandomizationController.py: Generated trancript for student id: 150120824
RandomizationController.py: Generated student: Cameron Buck with id: 150119962
RandomizationController.py: Generated trancript for student id: 150119962
RandomizationController.py: Generated student: Terrance Moran with id: 150118893
RandomizationController.py: Generated trancript for student id: 150118893
RandomizationController.py: Generated student: April Pennington with id: 150118958
RandomizationController.py: Generated trancript for student id: 150118958
RandomizationController.py: Generated student: Haley Blackwell with id: 150120247
RandomizationController.py: Generated trancript for student id: 150120247
RandomizationController.py: Generated student: Angela Estrada with id: 150121139
RandomizationController.py: Generated trancript for student id: 150121139
RandomizationController.py: Generated student: Herbert Riley with id: 150119117
RandomizationController.py: Generated trancript for student id: 150119117
RandomizationController.py: Generated student: Morgan Gonzalez with id: 150120133
RandomizationController.py: Generated trancript for student id: 150120133
RandomizationController.py: Generated student: Allen Short with id: 150118702
RandomizationController.py: Generated trancript for student id: 150118702
RandomizationController.py: Generated student: Brittany Hawkins with id: 150118037
RandomizationController.py: Generated trancript for student id: 150118037
RandomizationController.py: Generated student: Tracy Duncan with id: 150118069
RandomizationController.py: Generated trancript for student id: 150118069
RandomizationController.py: Generated student: David Meyer with id: 150118680
RandomizationController.py: Generated trancript for student id: 150118680
RandomizationController.py: Generated student: Chad Davis with id: 150119454
RandomizationController.py: Generated trancript for student id: 150119454
RandomizationController.py: Generated student: Angela Jones with id: 150121297
RandomizationController.py: Generated trancript for student id: 150121297
RandomizationController.py: Generated student: Kimberly James with id: 150121875
RandomizationController.py: Generated trancript for student id: 150121875
RandomizationController.py: Generated student: Susan Berry with id: 150119401
RandomizationController.py: Generated trancript for student id: 150119401
RandomizationController.py: Generated student: Julie Patton with id: 150120142
RandomizationController.py: Generated trancript for student id: 150120142
RandomizationController.py: Generated student: Laura Rios with id: 150121189
RandomizationController.py: Generated trancript for student id: 150121189
RandomizationController.py: Generated student: Emily Pearson with id: 150119801
RandomizationController.py: Generated trancript for student id: 150119801
RandomizationController.py: Generated student: Gloria Hunt with id: 150120233
RandomizationController.py: Generated trancript for student id: 150120233
RandomizationController.py: Generated student: Destiny Jones with id: 150120527
RandomizationController.py: Generated trancript for student id: 150120527
RandomizationController.py: Generated student: David Francis with id: 150118152
RandomizationController.py: Generated trancript for student id: 150118152
RandomizationController.py: Generated student: Kathryn Fuller with id: 150118196
RandomizationController.py: Generated trancript for student id: 150118196
RandomizationController.py: Generated student: Julie Boyd with id: 150121541
RandomizationController.py: Generated trancript for student id: 150121541
RandomizationController.py: Generated student: Brooke Fletcher with id: 150121575
RandomizationController.py: Generated trancript for student id: 150121575
RandomizationController.py: Generated student: Robert Ruiz with id: 150121609
RandomizationController.py: Generated trancript for student id: 150121609
RandomizationController.py: Generated student: Ian Mcdonald with id: 150118786
RandomizationController.py: Generated trancript for student id: 150118786
RandomizationController.py: Generated student: Dorothy Sandoval with id: 150119975
RandomizationController.py: Generated trancript for student id: 150119975
RandomizationController.py: Generated student: Tony Richard with id: 150118377
RandomizationController.py: Generated trancript for student id: 150118377
RandomizationController.py: Generated student: Gloria Bailey with id: 150119310
RandomizationController.py: Generated trancript for student id: 150119310
RandomizationController.py: Generated student: Lisa Williamson with id: 150119906
RandomizationController.py: Generated trancript for student id: 150119906
RandomizationController.py: Generated student: Andrew Mack with id: 150121109
RandomizationController.py: Generated trancript for student id: 150121109
RandomizationController.py: Generated student: Robin Hernandez with id: 150121316
RandomizationController.py: Generated trancript for student id: 150121316
RandomizationController.py: Generated student: Douglas Leonard with id: 150119535
RandomizationController.py: Generated trancript for student id: 150119535
RandomizationController.py: Generated student: Henry Richardson with id: 150119129
RandomizationController.py: Generated trancript for student id: 150119129
RandomizationController.py: Generated student: Diane Reeves with id: 150121968
RandomizationController.py: Generated trancript for student id: 150121968
RandomizationController.py: Generated student: Christopher Martinez with id: 150120914
RandomizationController.py: Generated trancript for student id: 150120914
RandomizationController.py: Generated student: Kristin Orozco with id: 150121355
RandomizationController.py: Generated trancript for student id: 150121355
RandomizationController.py: Generated student: Darryl Edwards with id: 150120183
RandomizationController.py: Generated trancript for student id: 150120183
RandomizationController.py: Generated student: Sandra Camacho with id: 150121975
RandomizationController.py: Generated trancript for student id: 150121975
RandomizationController.py: Generated student: Gregory Gilbert with id: 150119074
RandomizationController.py: Generated trancript for student id: 150119074
LabelingController.py: advisor created Murat Can Ganiz is created
LabelingController.py: advisor created Mustafa Ağaoğlu is created
LabelingController.py: advisor created Betül Boz is created
LabelingController.py: advisor created Çiğdem Eroğlu Erdem is created
LabelingController.py: advisor created Müjdat Soytürk is created
LabelingController.py: advisor created Ali Fuat Alkaya is created
LabelingController.py: advisor created Haluk Rahmi Topçuoğlu is created
LabelingController.py: advisor created Borahan Tümer is created
LabelingController.py: advisor created Ömer Korçak is created
LabelingController.py: advisor created Ali Haydar Özer is created
LabelingController.py: advisor created Sanem Arslan is created
LabelingController.py: advisor created Mehmet Baran is created
LabelingController.py: advisor created Fatma Corut is created
LabelingController.py: Curriculum2015 is created
LabelingController.py: Curriculum2020 is created
factory.py: Looking for locale `en_US` in provider `faker.providers.address`.
factory.py: Provider `faker.providers.address` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.automotive`.
factory.py: Provider `faker.providers.automotive` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.bank`.
factory.py: Specified locale `en_US` is not available for provider `faker.providers.bank`. Locale reset to `en_GB` for this provider.
factory.py: Looking for locale `en_US` in provider `faker.providers.barcode`.
factory.py: Provider `faker.providers.barcode` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.color`.
factory.py: Provider `faker.providers.color` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.company`.
factory.py: Provider `faker.providers.company` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.credit_card`.
factory.py: Provider `faker.providers.credit_card` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.currency`.
factory.py: Provider `faker.providers.currency` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.date_time`.
factory.py: Provider `faker.providers.date_time` has been localized to `en_US`.
factory.py: Provider `faker.providers.file` does not feature localization. Specified locale `en_US` is not utilized for this provider.
factory.py: Looking for locale `en_US` in provider `faker.providers.geo`.
factory.py: Provider `faker.providers.geo` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.internet`.
factory.py: Provider `faker.providers.internet` has been localized to `en_US`.
factory.py: Provider `faker.providers.isbn` does not feature localization. Specified locale `en_US` is not utilized for this provider.
factory.py: Looking for locale `en_US` in provider `faker.providers.job`.
factory.py: Provider `faker.providers.job` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.lorem`.
factory.py: Provider `faker.providers.lorem` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.misc`.
factory.py: Provider `faker.providers.misc` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.person`.
factory.py: Provider `faker.providers.person` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.phone_number`.
factory.py: Provider `faker.providers.phone_number` has been localized to `en_US`.
factory.py: Provider `faker.providers.profile` does not feature localization. Specified locale `en_US` is not utilized for this provider.
factory.py: Provider `faker.providers.python` does not feature localization. Specified locale `en_US` is not utilized for this provider.
factory.py: Looking for locale `en_US` in provider `faker.providers.ssn`.
factory.py: Provider `faker.providers.ssn` has been localized to `en_US`.
factory.py: Provider `faker.providers.user_agent` does not feature localization. Specified locale `en_US` is not utilized for this provider.
RandomizationController.py: Deleted all student input/output files.
RandomizationController.py: Generated student: Steven Wilkinson with id: 150120544
RandomizationController.py: Generated trancript for student id: 150120544
RandomizationController.py: Generated student: Sabrina Johnson with id: 150120930
RandomizationController.py: Generated trancript for student id: 150120930
RandomizationController.py: Generated student: Ashley Bell with id: 150119893
RandomizationController.py: Generated trancript for student id: 150119893
RandomizationController.py: Generated student: Michael Larson with id: 150120248
RandomizationController.py: Generated trancript for student id: 150120248
RandomizationController.py: Generated student: Tony Moran with id: 150118562
RandomizationController.py: Generated trancript for student id: 150118562
RandomizationController.py: Generated student: Kimberly Adams with id: 150119662
RandomizationController.py: Generated trancript for student id: 150119662
RandomizationController.py: Generated student: Alison Hunt with id: 150121792
RandomizationController.py: Generated trancript for student id: 150121792
RandomizationController.py: Generated student: Erik Owens with id: 150121599
RandomizationController.py: Generated trancript for student id: 150121599
RandomizationController.py: Generated student: Mary Miller with id: 150119003
RandomizationController.py: Generated trancript for student id: 150119003
RandomizationController.py: Generated student: Joseph Soto with id: 150121474
RandomizationController.py: Generated trancript for student id: 150121474
RandomizationController.py: Generated student: Jeffrey Bell with id: 150120991
RandomizationController.py: Generated trancript for student id: 150120991
RandomizationController.py: Generated student: Jacob White with id: 150119389
RandomizationController.py: Generated trancript for student id: 150119389
RandomizationController.py: Generated student: Michael Garner with id: 150120911
RandomizationController.py: Generated trancript for student id: 150120911
RandomizationController.py: Generated student: Diane White with id: 150119335
RandomizationController.py: Generated trancript for student id: 150119335
RandomizationController.py: Generated student: William Guzman with id: 150121725
RandomizationController.py: Generated trancript for student id: 150121725
RandomizationController.py: Generated student: Steven Walker with id: 150121851
RandomizationController.py: Generated trancript for student id: 150121851
RandomizationController.py: Generated student: Molly Cox with id: 150118622
RandomizationController.py: Generated trancript for student id: 150118622
RandomizationController.py: Generated student: Brandi Davis with id: 150121391
RandomizationController.py: Generated trancript for student id: 150121391
RandomizationController.py: Generated student: Daniel Chaney with id: 150120444
RandomizationController.py: Generated trancript for student id: 150120444
RandomizationController.py: Generated student: Patrick Nelson with id: 150118285
RandomizationController.py: Generated trancript for student id: 150118285
RandomizationController.py: Generated student: Kevin Aguirre with id: 150121123
RandomizationController.py: Generated trancript for student id: 150121123
RandomizationController.py: Generated student: Billy Guzman with id: 150119555
RandomizationController.py: Generated trancript for student id: 150119555
RandomizationController.py: Generated student: Heidi Jennings with id: 150120882
RandomizationController.py: Generated trancript for student id: 150120882
RandomizationController.py: Generated student: Stephanie Strong with id: 150118537
RandomizationController.py: Generated trancript for student id: 150118537
RandomizationController.py: Generated student: Mark Greene with id: 150119211
RandomizationController.py: Generated trancript for student id: 150119211
RandomizationController.py: Generated student: Daniel Butler with id: 150121447
RandomizationController.py: Generated trancript for student id: 150121447
RandomizationController.py: Generated student: Brian Carlson with id: 150118994
RandomizationController.py: Generated trancript for student id: 150118994
RandomizationController.py: Generated student: Erica George with id: 150120882
RandomizationController.py: Generated trancript for student id: 150120882
RandomizationController.py: Generated student: John Cunningham with id: 150119601
RandomizationController.py: Generated trancript for student id: 150119601
RandomizationController.py: Generated student: John Elliott with id: 150118019
RandomizationController.py: Generated trancript for student id: 150118019
RandomizationController.py: Generated student: Kevin Young with id: 150118408
RandomizationController.py: Generated trancript for student id: 150118408
RandomizationController.py: Generated student: Regina Mcfarland with id: 150118694
RandomizationController.py: Generated trancript for student id: 150118694
RandomizationController.py: Generated student: Walter Atkins with id: 150118262
RandomizationController.py: Generated trancript for student id: 150118262
RandomizationController.py: Generated student: Patrick Compton with id: 150120496
RandomizationController.py: Generated trancript for student id: 150120496
RandomizationController.py: Generated student: Kevin Harris with id: 150121812
RandomizationController.py: Generated trancript for student id: 150121812
RandomizationController.py: Generated student: Nicole Wright with id: 150120335
RandomizationController.py: Generated trancript for student id: 150120335
RandomizationController.py: Generated student: Melissa Hampton with id: 150121419
RandomizationController.py: Generated trancript for student id: 150121419
RandomizationController.py: Generated student: Jeffrey Walsh with id: 150120239
RandomizationController.py: Generated trancript for student id: 150120239
RandomizationController.py: Generated student: Peggy Mitchell with id: 150121267
RandomizationController.py: Generated trancript for student id: 150121267
RandomizationController.py: Generated student: Veronica Hunt with id: 150121869
RandomizationController.py: Generated trancript for student id: 150121869
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
LabelingController.py: advisor created Murat Can Ganiz is created
LabelingController.py: advisor created Mustafa Ağaoğlu is created
LabelingController.py: advisor created Betül Boz is created
LabelingController.py: advisor created Çiğdem Eroğlu Erdem is created
LabelingController.py: advisor created Müjdat Soytürk is created
LabelingController.py: advisor created Ali Fuat Alkaya is created
LabelingController.py: advisor created Haluk Rahmi Topçuoğlu is created
LabelingController.py: advisor created Borahan Tümer is created
LabelingController.py: advisor created Ömer Korçak is created
LabelingController.py: advisor created Ali Haydar Özer is created
LabelingController.py: advisor created Sanem Arslan is created
LabelingController.py: advisor created Mehmet Baran is created
LabelingController.py: advisor created Fatma Corut is created
LabelingController.py: Curriculum2015 is created
LabelingController.py: Curriculum2020 is created
factory.py: Looking for locale `en_US` in provider `faker.providers.address`.
factory.py: Provider `faker.providers.address` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.automotive`.
factory.py: Provider `faker.providers.automotive` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.bank`.
factory.py: Specified locale `en_US` is not available for provider `faker.providers.bank`. Locale reset to `en_GB` for this provider.
factory.py: Looking for locale `en_US` in provider `faker.providers.barcode`.
factory.py: Provider `faker.providers.barcode` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.color`.
factory.py: Provider `faker.providers.color` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.company`.
factory.py: Provider `faker.providers.company` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.credit_card`.
factory.py: Provider `faker.providers.credit_card` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.currency`.
factory.py: Provider `faker.providers.currency` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.date_time`.
factory.py: Provider `faker.providers.date_time` has been localized to `en_US`.
factory.py: Provider `faker.providers.file` does not feature localization. Specified locale `en_US` is not utilized for this provider.
factory.py: Looking for locale `en_US` in provider `faker.providers.geo`.
factory.py: Provider `faker.providers.geo` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.internet`.
factory.py: Provider `faker.providers.internet` has been localized to `en_US`.
factory.py: Provider `faker.providers.isbn` does not feature localization. Specified locale `en_US` is not utilized for this provider.
factory.py: Looking for locale `en_US` in provider `faker.providers.job`.
factory.py: Provider `faker.providers.job` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.lorem`.
factory.py: Provider `faker.providers.lorem` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.misc`.
factory.py: Provider `faker.providers.misc` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.person`.
factory.py: Provider `faker.providers.person` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.phone_number`.
factory.py: Provider `faker.providers.phone_number` has been localized to `en_US`.
factory.py: Provider `faker.providers.profile` does not feature localization. Specified locale `en_US` is not utilized for this provider.
factory.py: Provider `faker.providers.python` does not feature localization. Specified locale `en_US` is not utilized for this provider.
factory.py: Looking for locale `en_US` in provider `faker.providers.ssn`.
factory.py: Provider `faker.providers.ssn` has been localized to `en_US`.
factory.py: Provider `faker.providers.user_agent` does not feature localization. Specified locale `en_US` is not utilized for this provider.
RandomizationController.py: Deleted all student input/output files.
RandomizationController.py: Generated student: David Nguyen with id: 150121564
RandomizationController.py: Generated trancript for student id: 150121564
RandomizationController.py: Generated student: Jodi Miller with id: 150118518
RandomizationController.py: Generated trancript for student id: 150118518
RandomizationController.py: Generated student: Wayne Golden with id: 150121820
RandomizationController.py: Generated trancript for student id: 150121820
RandomizationController.py: Generated student: Reginald Frost with id: 150121016
RandomizationController.py: Generated trancript for student id: 150121016
RandomizationController.py: Generated student: Nancy Campbell with id: 150118799
RandomizationController.py: Generated trancript for student id: 150118799
RandomizationController.py: Generated student: Samantha Golden with id: 150121856
RandomizationController.py: Generated trancript for student id: 150121856
RandomizationController.py: Generated student: Rachel Dougherty with id: 150121472
RandomizationController.py: Generated trancript for student id: 150121472
RandomizationController.py: Generated student: Michael Reed with id: 150120717
RandomizationController.py: Generated trancript for student id: 150120717
RandomizationController.py: Generated student: Jose Gordon with id: 150121406
RandomizationController.py: Generated trancript for student id: 150121406
RandomizationController.py: Generated student: Brian Barnes with id: 150118846
RandomizationController.py: Generated trancript for student id: 150118846
RandomizationController.py: Generated student: William Archer with id: 150120987
RandomizationController.py: Generated trancript for student id: 150120987
RandomizationController.py: Generated student: Laura Evans with id: 150121513
RandomizationController.py: Generated trancript for student id: 150121513
RandomizationController.py: Generated student: Stacey Hall with id: 150118802
RandomizationController.py: Generated trancript for student id: 150118802
RandomizationController.py: Generated student: Carolyn Ballard with id: 150119269
RandomizationController.py: Generated trancript for student id: 150119269
RandomizationController.py: Generated student: John Hodges with id: 150120987
RandomizationController.py: Generated trancript for student id: 150120987
RandomizationController.py: Generated student: Amy Moreno with id: 150120346
RandomizationController.py: Generated trancript for student id: 150120346
RandomizationController.py: Generated student: Charles Hunter with id: 150119277
RandomizationController.py: Generated trancript for student id: 150119277
RandomizationController.py: Generated student: Logan Robertson with id: 150121806
RandomizationController.py: Generated trancript for student id: 150121806
RandomizationController.py: Generated student: Wyatt Kennedy with id: 150119861
RandomizationController.py: Generated trancript for student id: 150119861
RandomizationController.py: Generated student: Mark Alexander with id: 150120277
RandomizationController.py: Generated trancript for student id: 150120277
RandomizationController.py: Generated student: Jeffrey Brown with id: 150121421
RandomizationController.py: Generated trancript for student id: 150121421
RandomizationController.py: Generated student: Ann Martinez with id: 150119761
RandomizationController.py: Generated trancript for student id: 150119761
RandomizationController.py: Generated student: Melissa Williams with id: 150118885
RandomizationController.py: Generated trancript for student id: 150118885
RandomizationController.py: Generated student: Kevin Pollard with id: 150119234
RandomizationController.py: Generated trancript for student id: 150119234
RandomizationController.py: Generated student: Lori Gonzalez with id: 150121766
RandomizationController.py: Generated trancript for student id: 150121766
RandomizationController.py: Generated student: Christopher Sanders with id: 150118756
RandomizationController.py: Generated trancript for student id: 150118756
RandomizationController.py: Generated student: Troy Velasquez with id: 150121457
RandomizationController.py: Generated trancript for student id: 150121457
RandomizationController.py: Generated student: Theodore Carter with id: 150120054
RandomizationController.py: Generated trancript for student id: 150120054
RandomizationController.py: Generated student: Joseph Patton with id: 150118861
RandomizationController.py: Generated trancript for student id: 150118861
RandomizationController.py: Generated student: Douglas Martinez with id: 150118423
RandomizationController.py: Generated trancript for student id: 150118423
RandomizationController.py: Generated student: Frank Meadows with id: 150120168
RandomizationController.py: Generated trancript for student id: 150120168
RandomizationController.py: Generated student: Deborah Jones with id: 150120806
RandomizationController.py: Generated trancript for student id: 150120806
RandomizationController.py: Generated student: Donna Reynolds with id: 150120716
RandomizationController.py: Generated trancript for student id: 150120716
RandomizationController.py: Generated student: Ann Nelson with id: 150121525
RandomizationController.py: Generated trancript for student id: 150121525
RandomizationController.py: Generated student: Sharon Riley with id: 150119367
RandomizationController.py: Generated trancript for student id: 150119367
RandomizationController.py: Generated student: Brian Page with id: 150119216
RandomizationController.py: Generated trancript for student id: 150119216
RandomizationController.py: Generated student: Michael Webb with id: 150119001
RandomizationController.py: Generated trancript for student id: 150119001
RandomizationController.py: Generated student: Frances Lyons with id: 150120055
RandomizationController.py: Generated trancript for student id: 150120055
RandomizationController.py: Generated student: Laurie Young with id: 150118231
RandomizationController.py: Generated trancript for student id: 150118231
RandomizationController.py: Generated student: Melissa Clarke with id: 150118674
RandomizationController.py: Generated trancript for student id: 150118674
RandomizationController.py: Generated student: Diana Beard with id: 150118702
RandomizationController.py: Generated trancript for student id: 150118702
RandomizationController.py: Generated student: Michael Bailey with id: 150120915
RandomizationController.py: Generated trancript for student id: 150120915
RandomizationController.py: Generated student: Amber Brown with id: 150121363
RandomizationController.py: Generated trancript for student id: 150121363
RandomizationController.py: Generated student: Hector Gross with id: 150120820
RandomizationController.py: Generated trancript for student id: 150120820
RandomizationController.py: Generated student: Matthew Jordan with id: 150120659
RandomizationController.py: Generated trancript for student id: 150120659
RandomizationController.py: Generated student: Elizabeth Brown with id: 150118301
RandomizationController.py: Generated trancript for student id: 150118301
RandomizationController.py: Generated student: Marissa Hogan with id: 150118689
RandomizationController.py: Generated trancript for student id: 150118689
RandomizationController.py: Generated student: John Taylor with id: 150121706
RandomizationController.py: Generated trancript for student id: 150121706
RandomizationController.py: Generated student: Christopher Miller with id: 150119446
RandomizationController.py: Generated trancript for student id: 150119446
RandomizationController.py: Generated student: Lacey Page with id: 150120183
RandomizationController.py: Generated trancript for student id: 150120183
RandomizationController.py: Generated student: Lori Davis with id: 150120345
RandomizationController.py: Generated trancript for student id: 150120345
RandomizationController.py: Generated student: Lindsay Velazquez with id: 150120968
RandomizationController.py: Generated trancript for student id: 150120968
RandomizationController.py: Generated student: Destiny Taylor with id: 150119338
RandomizationController.py: Generated trancript for student id: 150119338
RandomizationController.py: Generated student: Emily Watson with id: 150121605
RandomizationController.py: Generated trancript for student id: 150121605
RandomizationController.py: Generated student: Jenna Williams with id: 150120518
RandomizationController.py: Generated trancript for student id: 150120518
RandomizationController.py: Generated student: Joe Valencia with id: 150120577
RandomizationController.py: Generated trancript for student id: 150120577
RandomizationController.py: Generated student: James Gonzales with id: 150118648
RandomizationController.py: Generated trancript for student id: 150118648
RandomizationController.py: Generated student: Larry Hayes with id: 150118206
RandomizationController.py: Generated trancript for student id: 150118206
RandomizationController.py: Generated student: Ray Mckenzie with id: 150119073
RandomizationController.py: Generated trancript for student id: 150119073
RandomizationController.py: Generated student: Anthony Jones with id: 150121880
RandomizationController.py: Generated trancript for student id: 150121880
RandomizationController.py: Generated student: Patrick Walker with id: 150120024
RandomizationController.py: Generated trancript for student id: 150120024
RandomizationController.py: Generated student: Cody Martin with id: 150121123
RandomizationController.py: Generated trancript for student id: 150121123
RandomizationController.py: Generated student: Lisa Mitchell with id: 150120148
RandomizationController.py: Generated trancript for student id: 150120148
RandomizationController.py: Generated student: Manuel Nelson with id: 150118847
RandomizationController.py: Generated trancript for student id: 150118847
RandomizationController.py: Generated student: Roberta Randall with id: 150119320
RandomizationController.py: Generated trancript for student id: 150119320
RandomizationController.py: Generated student: Debbie Blair with id: 150119073
RandomizationController.py: Generated trancript for student id: 150119073
RandomizationController.py: Generated student: Kimberly Camacho with id: 150119999
RandomizationController.py: Generated trancript for student id: 150119999
RandomizationController.py: Generated student: George Rodriguez with id: 150120408
RandomizationController.py: Generated trancript for student id: 150120408
RandomizationController.py: Generated student: Sandra Lynch with id: 150120564
RandomizationController.py: Generated trancript for student id: 150120564
RandomizationController.py: Generated student: Jason Hayden with id: 150120070
RandomizationController.py: Generated trancript for student id: 150120070
RandomizationController.py: Generated student: Michael Barnett with id: 150120794
RandomizationController.py: Generated trancript for student id: 150120794
RandomizationController.py: Generated student: James Castillo with id: 150120542
RandomizationController.py: Generated trancript for student id: 150120542
RandomizationController.py: Generated student: Jody Mcdonald with id: 150118998
RandomizationController.py: Generated trancript for student id: 150118998
RandomizationController.py: Generated student: Alicia Meyers with id: 150120433
RandomizationController.py: Generated trancript for student id: 150120433
RandomizationController.py: Generated student: Lisa Bradshaw with id: 150119231
RandomizationController.py: Generated trancript for student id: 150119231
RandomizationController.py: Generated student: Michele Jones with id: 150121020
RandomizationController.py: Generated trancript for student id: 150121020
RandomizationController.py: Generated student: Juan Freeman with id: 150120563
RandomizationController.py: Generated trancript for student id: 150120563
RandomizationController.py: Generated student: Brent Murray with id: 150118703
RandomizationController.py: Generated trancript for student id: 150118703
RandomizationController.py: Generated student: Mary White with id: 150119011
RandomizationController.py: Generated trancript for student id: 150119011
RandomizationController.py: Generated student: Allen Lin with id: 150119430
RandomizationController.py: Generated trancript for student id: 150119430
RandomizationController.py: Generated student: Michelle Oconnor with id: 150121328
RandomizationController.py: Generated trancript for student id: 150121328
RandomizationController.py: Generated student: Valerie Jackson with id: 150119953
RandomizationController.py: Generated trancript for student id: 150119953
RandomizationController.py: Generated student: Kimberly Padilla with id: 150120359
RandomizationController.py: Generated trancript for student id: 150120359
RandomizationController.py: Generated student: Timothy Pearson with id: 150120897
RandomizationController.py: Generated trancript for student id: 150120897
RandomizationController.py: Generated student: Jonathan Hunt with id: 150118894
RandomizationController.py: Generated trancript for student id: 150118894
RandomizationController.py: Generated student: Jonathan Mckinney with id: 150119169
RandomizationController.py: Generated trancript for student id: 150119169
RandomizationController.py: Generated student: Joseph Stone with id: 150119045
RandomizationController.py: Generated trancript for student id: 150119045
RandomizationController.py: Generated student: James Davis with id: 150121399
RandomizationController.py: Generated trancript for student id: 150121399
RandomizationController.py: Generated student: Debra Camacho with id: 150118139
RandomizationController.py: Generated trancript for student id: 150118139
RandomizationController.py: Generated student: Sherri Neal with id: 150121699
RandomizationController.py: Generated trancript for student id: 150121699
RandomizationController.py: Generated student: Patricia Rollins with id: 150120130
RandomizationController.py: Generated trancript for student id: 150120130
RandomizationController.py: Generated student: Kristina Wolfe with id: 150120751
RandomizationController.py: Generated trancript for student id: 150120751
RandomizationController.py: Generated student: Richard Tran with id: 150121330
RandomizationController.py: Generated trancript for student id: 150121330
RandomizationController.py: Generated student: Carlos Waller with id: 150121685
RandomizationController.py: Generated trancript for student id: 150121685
RandomizationController.py: Generated student: Austin Forbes with id: 150120803
RandomizationController.py: Generated trancript for student id: 150120803
RandomizationController.py: Generated student: David Cunningham with id: 150120079
RandomizationController.py: Generated trancript for student id: 150120079
RandomizationController.py: Generated student: Nancy Mcpherson with id: 150121798
RandomizationController.py: Generated trancript for student id: 150121798
RandomizationController.py: Generated student: Alisha Martin with id: 150121515
RandomizationController.py: Generated trancript for student id: 150121515
RandomizationController.py: Generated student: Michele Sanders with id: 150120871
RandomizationController.py: Generated trancript for student id: 150120871
RandomizationController.py: Generated student: Carolyn House with id: 150118139
RandomizationController.py: Generated trancript for student id: 150118139
RandomizationController.py: Generated student: Kathleen Rodgers with id: 150119069
RandomizationController.py: Generated trancript for student id: 150119069
RandomizationController.py: Generated student: Joanne Escobar with id: 150119101
RandomizationController.py: Generated trancript for student id: 150119101
RandomizationController.py: Generated student: Rachel Charles with id: 150120554
RandomizationController.py: Generated trancript for student id: 150120554
RandomizationController.py: Generated student: Michael May with id: 150119116
RandomizationController.py: Generated trancript for student id: 150119116
RandomizationController.py: Generated student: Patrick Perez with id: 150120160
RandomizationController.py: Generated trancript for student id: 150120160
RandomizationController.py: Generated student: Angela Bennett with id: 150119491
RandomizationController.py: Generated trancript for student id: 150119491
RandomizationController.py: Generated student: Alejandro Davis with id: 150120628
RandomizationController.py: Generated trancript for student id: 150120628
RandomizationController.py: Generated student: Brian Harris with id: 150120181
RandomizationController.py: Generated trancript for student id: 150120181
RandomizationController.py: Generated student: Adam Bradley with id: 150118764
RandomizationController.py: Generated trancript for student id: 150118764
RandomizationController.py: Generated student: Daniel Evans with id: 150120759
RandomizationController.py: Generated trancript for student id: 150120759
RandomizationController.py: Generated student: Elizabeth Martin with id: 150119555
RandomizationController.py: Generated trancript for student id: 150119555
RandomizationController.py: Generated student: Michael Mcmillan with id: 150119406
RandomizationController.py: Generated trancript for student id: 150119406
RandomizationController.py: Generated student: Kayla Jones with id: 150118036
RandomizationController.py: Generated trancript for student id: 150118036
RandomizationController.py: Generated student: Kathleen Mcgrath with id: 150119244
RandomizationController.py: Generated trancript for student id: 150119244
RandomizationController.py: Generated student: Amy Bright with id: 150121112
RandomizationController.py: Generated trancript for student id: 150121112
RandomizationController.py: Generated student: Cynthia Quinn with id: 150121459
RandomizationController.py: Generated trancript for student id: 150121459
RandomizationController.py: Generated student: Dana Day with id: 150121141
RandomizationController.py: Generated trancript for student id: 150121141
RandomizationController.py: Generated student: Roger Montoya with id: 150118426
RandomizationController.py: Generated trancript for student id: 150118426
RandomizationController.py: Generated student: Carolyn Pace with id: 150121944
RandomizationController.py: Generated trancript for student id: 150121944
RandomizationController.py: Generated student: Andrew Garrison with id: 150120441
RandomizationController.py: Generated trancript for student id: 150120441
RandomizationController.py: Generated student: Rachel Salas with id: 150119990
RandomizationController.py: Generated trancript for student id: 150119990
RandomizationController.py: Generated student: Samuel May with id: 150120626
RandomizationController.py: Generated trancript for student id: 150120626
RandomizationController.py: Generated student: Nicholas Carpenter with id: 150118898
RandomizationController.py: Generated trancript for student id: 150118898
RandomizationController.py: Generated student: Ray Hernandez with id: 150118073
RandomizationController.py: Generated trancript for student id: 150118073
RandomizationController.py: Generated student: Charles Johnson with id: 150121909
RandomizationController.py: Generated trancript for student id: 150121909
RandomizationController.py: Generated student: Lori Lane with id: 150120165
RandomizationController.py: Generated trancript for student id: 150120165
RandomizationController.py: Generated student: Julia Arnold with id: 150119088
RandomizationController.py: Generated trancript for student id: 150119088
RandomizationController.py: Generated student: Megan Robertson with id: 150119100
RandomizationController.py: Generated trancript for student id: 150119100
RandomizationController.py: Generated student: Anne Acosta with id: 150119534
RandomizationController.py: Generated trancript for student id: 150119534
RandomizationController.py: Generated student: Mary Martinez with id: 150118859
RandomizationController.py: Generated trancript for student id: 150118859
RandomizationController.py: Generated student: Abigail Wilson with id: 150121277
RandomizationController.py: Generated trancript for student id: 150121277
RandomizationController.py: Generated student: Edward Cain with id: 150119767
RandomizationController.py: Generated trancript for student id: 150119767
RandomizationController.py: Generated student: Kimberly Robinson with id: 150120413
RandomizationController.py: Generated trancript for student id: 150120413
RandomizationController.py: Generated student: Ellen Cook with id: 150119905
RandomizationController.py: Generated trancript for student id: 150119905
RandomizationController.py: Generated student: Elizabeth Guzman with id: 150121431
RandomizationController.py: Generated trancript for student id: 150121431
RandomizationController.py: Generated student: Katherine Meyer with id: 150121535
RandomizationController.py: Generated trancript for student id: 150121535
RandomizationController.py: Generated student: Autumn Thompson with id: 150118378
RandomizationController.py: Generated trancript for student id: 150118378
RandomizationController.py: Generated student: Ryan Stevens with id: 150118389
RandomizationController.py: Generated trancript for student id: 150118389
RandomizationController.py: Generated student: Madison Hammond with id: 150118004
RandomizationController.py: Generated trancript for student id: 150118004
RandomizationController.py: Generated student: Andrea Carroll with id: 150118488
RandomizationController.py: Generated trancript for student id: 150118488
RandomizationController.py: Generated student: William Villa with id: 150120017
RandomizationController.py: Generated trancript for student id: 150120017
RandomizationController.py: Generated student: Cody Smith with id: 150118006
RandomizationController.py: Generated trancript for student id: 150118006
RandomizationController.py: Generated student: Roy Hood with id: 150118134
RandomizationController.py: Generated trancript for student id: 150118134
RandomizationController.py: Generated student: Karen Wang with id: 150120213
RandomizationController.py: Generated trancript for student id: 150120213
RandomizationController.py: Generated student: Joy Long with id: 150120325
RandomizationController.py: Generated trancript for student id: 150120325
RandomizationController.py: Generated student: Ronald Anderson with id: 150121715
RandomizationController.py: Generated trancript for student id: 150121715
RandomizationController.py: Generated student: Dominic Walker with id: 150121402
RandomizationController.py: Generated trancript for student id: 150121402
RandomizationController.py: Generated student: Zachary Ward with id: 150121232
RandomizationController.py: Generated trancript for student id: 150121232
RandomizationController.py: Generated student: Samantha Green with id: 150119259
RandomizationController.py: Generated trancript for student id: 150119259
RandomizationController.py: Generated student: David Turner with id: 150121968
RandomizationController.py: Generated trancript for student id: 150121968
RandomizationController.py: Generated student: Alejandra Patterson with id: 150119416
RandomizationController.py: Generated trancript for student id: 150119416
RandomizationController.py: Generated student: Caitlin Wilson with id: 150118525
RandomizationController.py: Generated trancript for student id: 150118525
RandomizationController.py: Generated student: Brittany Allen with id: 150121501
RandomizationController.py: Generated trancript for student id: 150121501
RandomizationController.py: Generated student: Matthew Powell with id: 150119321
RandomizationController.py: Generated trancript for student id: 150119321
RandomizationController.py: Generated student: Renee Edwards with id: 150121990
RandomizationController.py: Generated trancript for student id: 150121990
RandomizationController.py: Generated student: Tamara Hess with id: 150120392
RandomizationController.py: Generated trancript for student id: 150120392
RandomizationController.py: Generated student: Gabriel Gibson with id: 150119297
RandomizationController.py: Generated trancript for student id: 150119297
RandomizationController.py: Generated student: Nicole Pennington with id: 150119172
RandomizationController.py: Generated trancript for student id: 150119172
RandomizationController.py: Generated student: Joshua Welch with id: 150121992
RandomizationController.py: Generated trancript for student id: 150121992
RandomizationController.py: Generated student: Cynthia Hoffman with id: 150118750
RandomizationController.py: Generated trancript for student id: 150118750
RandomizationController.py: Generated student: Jacob Waters with id: 150120722
RandomizationController.py: Generated trancript for student id: 150120722
RandomizationController.py: Generated student: Brett Sanchez with id: 150118076
RandomizationController.py: Generated trancript for student id: 150118076
RandomizationController.py: Generated student: Michele Taylor with id: 150118985
RandomizationController.py: Generated trancript for student id: 150118985
RandomizationController.py: Generated student: Michael Crawford with id: 150119849
RandomizationController.py: Generated trancript for student id: 150119849
RandomizationController.py: Generated student: Stephen Thompson with id: 150121389
RandomizationController.py: Generated trancript for student id: 150121389
RandomizationController.py: Generated student: Guy Johnson with id: 150121946
RandomizationController.py: Generated trancript for student id: 150121946
RandomizationController.py: Generated student: Barbara Chang with id: 150121312
RandomizationController.py: Generated trancript for student id: 150121312
RandomizationController.py: Generated student: David Barrett with id: 150121945
RandomizationController.py: Generated trancript for student id: 150121945
RandomizationController.py: Generated student: Tyler Shaw with id: 150120163
RandomizationController.py: Generated trancript for student id: 150120163
RandomizationController.py: Generated student: Angelica Thompson with id: 150121936
RandomizationController.py: Generated trancript for student id: 150121936
RandomizationController.py: Generated student: Brandon Townsend with id: 150121610
RandomizationController.py: Generated trancript for student id: 150121610
RandomizationController.py: Generated student: Amanda Moses with id: 150121821
RandomizationController.py: Generated trancript for student id: 150121821
RandomizationController.py: Generated student: Thomas Washington with id: 150120556
RandomizationController.py: Generated trancript for student id: 150120556
RandomizationController.py: Generated student: Bryan Gibson with id: 150119351
RandomizationController.py: Generated trancript for student id: 150119351
RandomizationController.py: Generated student: Sarah Payne with id: 150118371
RandomizationController.py: Generated trancript for student id: 150118371
RandomizationController.py: Generated student: Scott Kline with id: 150121571
RandomizationController.py: Generated trancript for student id: 150121571
RandomizationController.py: Generated student: Bruce Scott with id: 150120614
RandomizationController.py: Generated trancript for student id: 150120614
RandomizationController.py: Generated student: Danielle Villa with id: 150118235
RandomizationController.py: Generated trancript for student id: 150118235
RandomizationController.py: Generated student: Dana Williams with id: 150119061
RandomizationController.py: Generated trancript for student id: 150119061
RandomizationController.py: Generated student: Timothy Hendricks with id: 150118508
RandomizationController.py: Generated trancript for student id: 150118508
RandomizationController.py: Generated student: Lori Huynh with id: 150119620
RandomizationController.py: Generated trancript for student id: 150119620
RandomizationController.py: Generated student: Erin Valentine with id: 150118997
RandomizationController.py: Generated trancript for student id: 150118997
RandomizationController.py: Generated student: Steven Roth with id: 150121694
RandomizationController.py: Generated trancript for student id: 150121694
RandomizationController.py: Generated student: Rodney White with id: 150121135
RandomizationController.py: Generated trancript for student id: 150121135
RandomizationController.py: Generated student: Joseph Price with id: 150121147
RandomizationController.py: Generated trancript for student id: 150121147
RandomizationController.py: Generated student: Garrett Knapp with id: 150120101
RandomizationController.py: Generated trancript for student id: 150120101
RandomizationController.py: Generated student: Timothy Ruiz with id: 150118099
RandomizationController.py: Generated trancript for student id: 150118099
RandomizationController.py: Generated student: Tammie Johnson with id: 150121350
RandomizationController.py: Generated trancript for student id: 150121350
RandomizationController.py: Generated student: Dawn Harper with id: 150120942
RandomizationController.py: Generated trancript for student id: 150120942
RandomizationController.py: Generated student: Leah Wang with id: 150121843
RandomizationController.py: Generated trancript for student id: 150121843
RandomizationController.py: Generated student: Paula Johnson with id: 150121635
RandomizationController.py: Generated trancript for student id: 150121635
RandomizationController.py: Generated student: Joshua Chase with id: 150118234
RandomizationController.py: Generated trancript for student id: 150118234
RandomizationController.py: Generated student: Steven Eaton with id: 150119485
RandomizationController.py: Generated trancript for student id: 150119485
RandomizationController.py: Generated student: Elizabeth Leach with id: 150118507
RandomizationController.py: Generated trancript for student id: 150118507
RandomizationController.py: Generated student: Kathleen Scott with id: 150121183
RandomizationController.py: Generated trancript for student id: 150121183
RandomizationController.py: Generated student: Joyce Brown with id: 150118505
RandomizationController.py: Generated trancript for student id: 150118505
RandomizationController.py: Generated student: Sean Miller with id: 150118233
RandomizationController.py: Generated trancript for student id: 150118233
RandomizationController.py: Generated student: Kelsey Holder with id: 150119907
RandomizationController.py: Generated trancript for student id: 150119907
RandomizationController.py: Generated student: Andrew Kirk with id: 150121406
RandomizationController.py: Generated trancript for student id: 150121406
RandomizationController.py: Generated student: Brett Guerrero with id: 150121267
RandomizationController.py: Generated trancript for student id: 150121267
RandomizationController.py: Generated student: Amber Taylor with id: 150121642
RandomizationController.py: Generated trancript for student id: 150121642
RandomizationController.py: Generated student: Katrina West with id: 150120367
RandomizationController.py: Generated trancript for student id: 150120367
RandomizationController.py: Generated student: Erica Clements with id: 150120860
RandomizationController.py: Generated trancript for student id: 150120860
RandomizationController.py: Generated student: Benjamin Erickson with id: 150121783
RandomizationController.py: Generated trancript for student id: 150121783
RandomizationController.py: Generated student: Zachary Hayes with id: 150118835
RandomizationController.py: Generated trancript for student id: 150118835
RandomizationController.py: Generated student: Scott Bradford with id: 150120164
RandomizationController.py: Generated trancript for student id: 150120164
RandomizationController.py: Generated student: Debra Weeks with id: 150119739
RandomizationController.py: Generated trancript for student id: 150119739
RandomizationController.py: Generated student: Patricia Gonzalez with id: 150120132
RandomizationController.py: Generated trancript for student id: 150120132
RandomizationController.py: Generated student: David Russell with id: 150119186
RandomizationController.py: Generated trancript for student id: 150119186
RandomizationController.py: Generated student: Shelley Anderson with id: 150121835
RandomizationController.py: Generated trancript for student id: 150121835
RandomizationController.py: Generated student: Joseph Wagner with id: 150120511
RandomizationController.py: Generated trancript for student id: 150120511
RandomizationController.py: Generated student: Tammy Gross with id: 150118268
RandomizationController.py: Generated trancript for student id: 150118268
RandomizationController.py: Generated student: William Gill with id: 150120843
RandomizationController.py: Generated trancript for student id: 150120843
RandomizationController.py: Generated student: David Frazier with id: 150120303
RandomizationController.py: Generated trancript for student id: 150120303
RandomizationController.py: Generated student: Emily Mendez with id: 150118739
RandomizationController.py: Generated trancript for student id: 150118739
RandomizationController.py: Generated student: Sarah Campbell with id: 150121260
RandomizationController.py: Generated trancript for student id: 150121260
RandomizationController.py: Generated student: Jason Parker with id: 150118552
RandomizationController.py: Generated trancript for student id: 150118552
RandomizationController.py: Generated student: Jason Cain with id: 150118463
RandomizationController.py: Generated trancript for student id: 150118463
RandomizationController.py: Generated student: Stephanie Phillips with id: 150119826
RandomizationController.py: Generated trancript for student id: 150119826
RandomizationController.py: Generated student: Charles Adams with id: 150119621
RandomizationController.py: Generated trancript for student id: 150119621
RandomizationController.py: Generated student: Troy Jimenez with id: 150120223
RandomizationController.py: Generated trancript for student id: 150120223
RandomizationController.py: Generated student: Morgan White with id: 150120917
RandomizationController.py: Generated trancript for student id: 150120917
RandomizationController.py: Generated student: Eric Gomez with id: 150119948
RandomizationController.py: Generated trancript for student id: 150119948
RandomizationController.py: Generated student: Tony Smith with id: 150119046
RandomizationController.py: Generated trancript for student id: 150119046
RandomizationController.py: Generated student: Jordan Lowe with id: 150120352
RandomizationController.py: Generated trancript for student id: 150120352
RandomizationController.py: Generated student: Terri Jensen with id: 150121599
RandomizationController.py: Generated trancript for student id: 150121599
RandomizationController.py: Generated student: Jeffery Wallace with id: 150121035
RandomizationController.py: Generated trancript for student id: 150121035
RandomizationController.py: Generated student: Jennifer Jones with id: 150121053
RandomizationController.py: Generated trancript for student id: 150121053
RandomizationController.py: Generated student: Sandra Thompson with id: 150118457
RandomizationController.py: Generated trancript for student id: 150118457
RandomizationController.py: Generated student: Donald Wilson with id: 150118643
RandomizationController.py: Generated trancript for student id: 150118643
RandomizationController.py: Generated student: John Knox with id: 150120128
RandomizationController.py: Generated trancript for student id: 150120128
RandomizationController.py: Generated student: Jason Harrison with id: 150120250
RandomizationController.py: Generated trancript for student id: 150120250
RandomizationController.py: Generated student: Lisa Brooks with id: 150119569
RandomizationController.py: Generated trancript for student id: 150119569
RandomizationController.py: Generated student: Laura Guzman with id: 150118084
RandomizationController.py: Generated trancript for student id: 150118084
RandomizationController.py: Generated student: Valerie Johnson with id: 150119291
RandomizationController.py: Generated trancript for student id: 150119291
RandomizationController.py: Generated student: Kiara Sanchez with id: 150118506
RandomizationController.py: Generated trancript for student id: 150118506
RandomizationController.py: Generated student: Michelle Bates with id: 150121244
RandomizationController.py: Generated trancript for student id: 150121244
RandomizationController.py: Generated student: Paige Hart with id: 150118667
RandomizationController.py: Generated trancript for student id: 150118667
RandomizationController.py: Generated student: Tiffany Hamilton with id: 150118088
RandomizationController.py: Generated trancript for student id: 150118088
RandomizationController.py: Generated student: Amy Douglas with id: 150118087
RandomizationController.py: Generated trancript for student id: 150118087
RandomizationController.py: Generated student: Lisa Hunter with id: 150120492
RandomizationController.py: Generated trancript for student id: 150120492
RandomizationController.py: Generated student: Brady Johnson with id: 150118326
RandomizationController.py: Generated trancript for student id: 150118326
RandomizationController.py: Generated student: Dominic Morrison with id: 150121270
RandomizationController.py: Generated trancript for student id: 150121270
RandomizationController.py: Generated student: Natasha Davis with id: 150119499
RandomizationController.py: Generated trancript for student id: 150119499
RandomizationController.py: Generated student: Kyle Foster with id: 150119724
RandomizationController.py: Generated trancript for student id: 150119724
RandomizationController.py: Generated student: Ashley Murphy with id: 150121496
RandomizationController.py: Generated trancript for student id: 150121496
RandomizationController.py: Generated student: Gary Wright with id: 150121488
RandomizationController.py: Generated trancript for student id: 150121488
RandomizationController.py: Generated student: Alexandra Townsend with id: 150119971
RandomizationController.py: Generated trancript for student id: 150119971
RandomizationController.py: Generated student: Suzanne Cunningham with id: 150120608
RandomizationController.py: Generated trancript for student id: 150120608
RandomizationController.py: Generated student: Brandon Mann with id: 150118731
RandomizationController.py: Generated trancript for student id: 150118731
RandomizationController.py: Generated student: Dustin Schwartz with id: 150121503
RandomizationController.py: Generated trancript for student id: 150121503
RandomizationController.py: Generated student: David Bowman with id: 150120668
RandomizationController.py: Generated trancript for student id: 150120668
RandomizationController.py: Generated student: Vincent Fernandez with id: 150121734
RandomizationController.py: Generated trancript for student id: 150121734
RandomizationController.py: Generated student: Jacob Long with id: 150119949
RandomizationController.py: Generated trancript for student id: 150119949
RandomizationController.py: Generated student: Jean Johns with id: 150121309
RandomizationController.py: Generated trancript for student id: 150121309
RandomizationController.py: Generated student: James Herring with id: 150120320
RandomizationController.py: Generated trancript for student id: 150120320
RandomizationController.py: Generated student: Adrian Larson with id: 150121151
RandomizationController.py: Generated trancript for student id: 150121151
RandomizationController.py: Generated student: Paula Cunningham with id: 150119202
RandomizationController.py: Generated trancript for student id: 150119202
RandomizationController.py: Generated student: Chad Washington with id: 150118848
RandomizationController.py: Generated trancript for student id: 150118848
RandomizationController.py: Generated student: Patrick Garcia with id: 150118927
RandomizationController.py: Generated trancript for student id: 150118927
RandomizationController.py: Generated student: Michael Gonzalez with id: 150118170
RandomizationController.py: Generated trancript for student id: 150118170
RandomizationController.py: Generated student: Michael Estrada with id: 150119303
RandomizationController.py: Generated trancript for student id: 150119303
RandomizationController.py: Generated student: Maria Mendoza with id: 150120674
RandomizationController.py: Generated trancript for student id: 150120674
RandomizationController.py: Generated student: Yolanda Padilla with id: 150118767
RandomizationController.py: Generated trancript for student id: 150118767
RandomizationController.py: Generated student: Stephen Rogers with id: 150119825
RandomizationController.py: Generated trancript for student id: 150119825
RandomizationController.py: Generated student: Jose Dickerson with id: 150120176
RandomizationController.py: Generated trancript for student id: 150120176
RandomizationController.py: Generated student: Timothy Rodriguez with id: 150118831
RandomizationController.py: Generated trancript for student id: 150118831
RandomizationController.py: Generated student: Christopher Robinson with id: 150119466
RandomizationController.py: Generated trancript for student id: 150119466
RandomizationController.py: Generated student: Jodi Andrews with id: 150120324
RandomizationController.py: Generated trancript for student id: 150120324
RandomizationController.py: Generated student: Joseph Bailey with id: 150120529
RandomizationController.py: Generated trancript for student id: 150120529
RandomizationController.py: Generated student: Cody Evans with id: 150120386
RandomizationController.py: Generated trancript for student id: 150120386
RandomizationController.py: Generated student: Rodney Pace with id: 150121584
RandomizationController.py: Generated trancript for student id: 150121584
RandomizationController.py: Generated student: Brandon Landry with id: 150121907
RandomizationController.py: Generated trancript for student id: 150121907
RandomizationController.py: Generated student: Randall Jordan with id: 150120096
RandomizationController.py: Generated trancript for student id: 150120096
RandomizationController.py: Generated student: Wesley Owens with id: 150119234
RandomizationController.py: Generated trancript for student id: 150119234
RandomizationController.py: Generated student: Kevin Newton with id: 150119083
RandomizationController.py: Generated trancript for student id: 150119083
RandomizationController.py: Generated student: Joseph Lee with id: 150121231
RandomizationController.py: Generated trancript for student id: 150121231
RandomizationController.py: Generated student: Michael Abbott with id: 150120726
RandomizationController.py: Generated trancript for student id: 150120726
RandomizationController.py: Generated student: Nicole Barrett with id: 150120636
RandomizationController.py: Generated trancript for student id: 150120636
RandomizationController.py: Generated student: Theresa Fry with id: 150118454
RandomizationController.py: Generated trancript for student id: 150118454
RandomizationController.py: Generated student: Adam Rosario with id: 150119729
RandomizationController.py: Generated trancript for student id: 150119729
RandomizationController.py: Generated student: Rachel Scott with id: 150120610
RandomizationController.py: Generated trancript for student id: 150120610
RandomizationController.py: Generated student: Heather Sullivan with id: 150118349
RandomizationController.py: Generated trancript for student id: 150118349
RandomizationController.py: Generated student: Kimberly Garza with id: 150119851
RandomizationController.py: Generated trancript for student id: 150119851
RandomizationController.py: Generated student: Gregory Jones with id: 150121809
RandomizationController.py: Generated trancript for student id: 150121809
RandomizationController.py: Generated student: Louis Cervantes with id: 150121831
RandomizationController.py: Generated trancript for student id: 150121831
RandomizationController.py: Generated student: Brandi Hooper with id: 150121086
RandomizationController.py: Generated trancript for student id: 150121086
RandomizationController.py: Generated student: Kristin Hicks with id: 150119660
RandomizationController.py: Generated trancript for student id: 150119660
RandomizationController.py: Generated student: Connie Howe with id: 150119672
RandomizationController.py: Generated trancript for student id: 150119672
RandomizationController.py: Generated student: Kara Jackson with id: 150119223
RandomizationController.py: Generated trancript for student id: 150119223
RandomizationController.py: Generated student: Daniel Gregory with id: 150119802
RandomizationController.py: Generated trancript for student id: 150119802
RandomizationController.py: Generated student: Eric Jacobs with id: 150120033
RandomizationController.py: Generated trancript for student id: 150120033
RandomizationController.py: Generated student: Kayla Wolfe with id: 150118030
RandomizationController.py: Generated trancript for student id: 150118030
RandomizationController.py: Generated student: Ashley Jackson with id: 150119806
RandomizationController.py: Generated trancript for student id: 150119806
RandomizationController.py: Generated student: Charles Higgins with id: 150118892
RandomizationController.py: Generated trancript for student id: 150118892
RandomizationController.py: Generated student: Richard Lawrence with id: 150120387
RandomizationController.py: Generated trancript for student id: 150120387
RandomizationController.py: Generated student: Adam Johns with id: 150121791
RandomizationController.py: Generated trancript for student id: 150121791
RandomizationController.py: Generated student: Ian Swanson with id: 150119119
RandomizationController.py: Generated trancript for student id: 150119119
RandomizationController.py: Generated student: Joshua Anderson with id: 150118819
RandomizationController.py: Generated trancript for student id: 150118819
RandomizationController.py: Generated student: Sarah Thompson with id: 150118994
RandomizationController.py: Generated trancript for student id: 150118994
RandomizationController.py: Generated student: Madison Ortiz with id: 150118296
RandomizationController.py: Generated trancript for student id: 150118296
RandomizationController.py: Generated student: Tina Shepard with id: 150121945
RandomizationController.py: Generated trancript for student id: 150121945
RandomizationController.py: Generated student: Gary Bridges with id: 150121161
RandomizationController.py: Generated trancript for student id: 150121161
RandomizationController.py: Generated student: Joshua Stanton with id: 150120201
RandomizationController.py: Generated trancript for student id: 150120201
RandomizationController.py: Generated student: Michael Robertson with id: 150121594
RandomizationController.py: Generated trancript for student id: 150121594
RandomizationController.py: Generated student: Kayla Arroyo with id: 150120073
RandomizationController.py: Generated trancript for student id: 150120073
RandomizationController.py: Generated student: Joseph Crawford with id: 150119358
RandomizationController.py: Generated trancript for student id: 150119358
RandomizationController.py: Generated student: Andrew Foster with id: 150118876
RandomizationController.py: Generated trancript for student id: 150118876
RandomizationController.py: Generated student: Andrea Hill with id: 150120208
RandomizationController.py: Generated trancript for student id: 150120208
RandomizationController.py: Generated student: Lauren Hamilton with id: 150120455
RandomizationController.py: Generated trancript for student id: 150120455
RandomizationController.py: Generated student: Luis Miller with id: 150118584
RandomizationController.py: Generated trancript for student id: 150118584
RandomizationController.py: Generated student: Kyle Sellers with id: 150121010
RandomizationController.py: Generated trancript for student id: 150121010
RandomizationController.py: Generated student: Brandon Barrett with id: 150120887
RandomizationController.py: Generated trancript for student id: 150120887
RandomizationController.py: Generated student: Monica Hodge with id: 150121700
RandomizationController.py: Generated trancript for student id: 150121700
RandomizationController.py: Generated student: Russell Martin with id: 150121802
RandomizationController.py: Generated trancript for student id: 150121802
RandomizationController.py: Generated student: Leslie Gibson with id: 150120303
RandomizationController.py: Generated trancript for student id: 150120303
RandomizationController.py: Generated student: Larry Thompson with id: 150121540
RandomizationController.py: Generated trancript for student id: 150121540
RandomizationController.py: Generated student: Mark Blake with id: 150121507
RandomizationController.py: Generated trancript for student id: 150121507
RandomizationController.py: Generated student: Jessica Hoffman with id: 150120808
RandomizationController.py: Generated trancript for student id: 150120808
RandomizationController.py: Generated student: Marc Garcia with id: 150121666
RandomizationController.py: Generated trancript for student id: 150121666
RandomizationController.py: Generated student: Travis Martin with id: 150118867
RandomizationController.py: Generated trancript for student id: 150118867
RandomizationController.py: Generated student: Samuel Wall with id: 150119017
RandomizationController.py: Generated trancript for student id: 150119017
RandomizationController.py: Generated student: Sierra Boyd with id: 150120325
RandomizationController.py: Generated trancript for student id: 150120325
RandomizationController.py: Generated student: Brian Miller with id: 150119349
RandomizationController.py: Generated trancript for student id: 150119349
RandomizationController.py: Generated student: Olivia Lynch with id: 150118182
RandomizationController.py: Generated trancript for student id: 150118182
RandomizationController.py: Generated student: Jesus Gomez with id: 150118401
RandomizationController.py: Generated trancript for student id: 150118401
RandomizationController.py: Generated student: David Collins with id: 150120035
RandomizationController.py: Generated trancript for student id: 150120035
RandomizationController.py: Generated student: Ryan Wells with id: 150120360
RandomizationController.py: Generated trancript for student id: 150120360
RandomizationController.py: Generated student: James Washington with id: 150121149
RandomizationController.py: Generated trancript for student id: 150121149
RandomizationController.py: Generated student: James Meyers with id: 150120682
RandomizationController.py: Generated trancript for student id: 150120682
RandomizationController.py: Generated student: Elizabeth Roberts with id: 150118378
RandomizationController.py: Generated trancript for student id: 150118378
RandomizationController.py: Generated student: Sandra Garcia with id: 150119808
RandomizationController.py: Generated trancript for student id: 150119808
RandomizationController.py: Generated student: Johnathan Salas with id: 150118613
RandomizationController.py: Generated trancript for student id: 150118613
RandomizationController.py: Generated student: James Smith with id: 150121855
RandomizationController.py: Generated trancript for student id: 150121855
RandomizationController.py: Generated student: William Hodge with id: 150121102
RandomizationController.py: Generated trancript for student id: 150121102
RandomizationController.py: Generated student: Emily Adams with id: 150120413
RandomizationController.py: Generated trancript for student id: 150120413
RandomizationController.py: Generated student: Ryan Day with id: 150119710
RandomizationController.py: Generated trancript for student id: 150119710
RandomizationController.py: Generated student: Jessica Riddle with id: 150120404
RandomizationController.py: Generated trancript for student id: 150120404
RandomizationController.py: Generated student: Christine Keller with id: 150121426
RandomizationController.py: Generated trancript for student id: 150121426
RandomizationController.py: Generated student: Jody Washington with id: 150118845
RandomizationController.py: Generated trancript for student id: 150118845
RandomizationController.py: Generated student: Ashley Williams with id: 150118882
RandomizationController.py: Generated trancript for student id: 150118882
RandomizationController.py: Generated student: Gerald Williams with id: 150119146
RandomizationController.py: Generated trancript for student id: 150119146
RandomizationController.py: Generated student: Timothy Williams with id: 150120289
RandomizationController.py: Generated trancript for student id: 150120289
RandomizationController.py: Generated student: Christopher Singleton with id: 150121329
RandomizationController.py: Generated trancript for student id: 150121329
RandomizationController.py: Generated student: Raymond Duncan with id: 150121041
RandomizationController.py: Generated trancript for student id: 150121041
RandomizationController.py: Generated student: Kelly Thomas with id: 150121602
RandomizationController.py: Generated trancript for student id: 150121602
RandomizationController.py: Generated student: Anthony Lee with id: 150121913
RandomizationController.py: Generated trancript for student id: 150121913
RandomizationController.py: Generated student: Shane Smith with id: 150120820
RandomizationController.py: Generated trancript for student id: 150120820
RandomizationController.py: Generated student: Nicholas Watts with id: 150118290
RandomizationController.py: Generated trancript for student id: 150118290
RandomizationController.py: Generated student: Michael Thompson with id: 150120918
RandomizationController.py: Generated trancript for student id: 150120918
RandomizationController.py: Generated student: James Williams with id: 150121815
RandomizationController.py: Generated trancript for student id: 150121815
RandomizationController.py: Generated student: Walter Harvey with id: 150120829
RandomizationController.py: Generated trancript for student id: 150120829
RandomizationController.py: Generated student: Taylor Coleman with id: 150119439
RandomizationController.py: Generated trancript for student id: 150119439
RandomizationController.py: Generated student: Jessica Rodriguez with id: 150118188
RandomizationController.py: Generated trancript for student id: 150118188
RandomizationController.py: Generated student: Oscar Jones with id: 150118382
RandomizationController.py: Generated trancript for student id: 150118382
RandomizationController.py: Generated student: Meghan Alvarez with id: 150119923
RandomizationController.py: Generated trancript for student id: 150119923
RandomizationController.py: Generated student: Randy Lee with id: 150118214
RandomizationController.py: Generated trancript for student id: 150118214
RandomizationController.py: Generated student: Christopher Garza with id: 150121237
RandomizationController.py: Generated trancript for student id: 150121237
RandomizationController.py: Generated student: Emily Andersen with id: 150120573
RandomizationController.py: Generated trancript for student id: 150120573
RandomizationController.py: Generated student: Jerry Thompson with id: 150119095
RandomizationController.py: Generated trancript for student id: 150119095
RandomizationController.py: Generated student: Bob Thompson with id: 150120549
RandomizationController.py: Generated trancript for student id: 150120549
RandomizationController.py: Generated student: Kelsey Quinn with id: 150121974
RandomizationController.py: Generated trancript for student id: 150121974
RandomizationController.py: Generated student: Crystal Sandoval with id: 150120587
RandomizationController.py: Generated trancript for student id: 150120587
RandomizationController.py: Generated student: Heather Green with id: 150119855
RandomizationController.py: Generated trancript for student id: 150119855
RandomizationController.py: Generated student: Brian Johnson with id: 150121626
RandomizationController.py: Generated trancript for student id: 150121626
RandomizationController.py: Generated student: Ebony Foley with id: 150121680
RandomizationController.py: Generated trancript for student id: 150121680
RandomizationController.py: Generated student: William Reed with id: 150120112
RandomizationController.py: Generated trancript for student id: 150120112
RandomizationController.py: Generated student: Joseph Jordan with id: 150119157
RandomizationController.py: Generated trancript for student id: 150119157
RandomizationController.py: Generated student: Tracy Reyes with id: 150118757
RandomizationController.py: Generated trancript for student id: 150118757
RandomizationController.py: Generated student: Nicholas Becker with id: 150121791
RandomizationController.py: Generated trancript for student id: 150121791
RandomizationController.py: Generated student: James Mclaughlin with id: 150118991
RandomizationController.py: Generated trancript for student id: 150118991
RandomizationController.py: Generated student: Daniel Flowers with id: 150119805
RandomizationController.py: Generated trancript for student id: 150119805
RandomizationController.py: Generated student: Scott Allen with id: 150119035
RandomizationController.py: Generated trancript for student id: 150119035
RandomizationController.py: Generated student: Erika Taylor with id: 150121665
RandomizationController.py: Generated trancript for student id: 150121665
RandomizationController.py: Generated student: Jill Boyd with id: 150120988
RandomizationController.py: Generated trancript for student id: 150120988
RandomizationController.py: Generated student: Erin Hart with id: 150121715
RandomizationController.py: Generated trancript for student id: 150121715
RandomizationController.py: Generated student: Crystal Boone with id: 150120304
RandomizationController.py: Generated trancript for student id: 150120304
RandomizationController.py: Generated student: Bryan Perez with id: 150118959
RandomizationController.py: Generated trancript for student id: 150118959
RandomizationController.py: Generated student: Peter Bean with id: 150118220
RandomizationController.py: Generated trancript for student id: 150118220
RandomizationController.py: Generated student: Brent Phillips with id: 150120599
RandomizationController.py: Generated trancript for student id: 150120599
RandomizationController.py: Generated student: Jack Bradshaw with id: 150121771
RandomizationController.py: Generated trancript for student id: 150121771
RandomizationController.py: Generated student: Lindsay Steele with id: 150118116
RandomizationController.py: Generated trancript for student id: 150118116
RandomizationController.py: Generated student: Valerie Lee with id: 150118153
RandomizationController.py: Generated trancript for student id: 150118153
RandomizationController.py: Generated student: Linda Lowery with id: 150119145
RandomizationController.py: Generated trancript for student id: 150119145
RandomizationController.py: Generated student: Nicole Kelly with id: 150118542
RandomizationController.py: Generated trancript for student id: 150118542
RandomizationController.py: Generated student: Robin Hill with id: 150121370
RandomizationController.py: Generated trancript for student id: 150121370
RandomizationController.py: Generated student: Andrew Willis with id: 150118923
RandomizationController.py: Generated trancript for student id: 150118923
RandomizationController.py: Generated student: Stephanie Williams with id: 150121731
RandomizationController.py: Generated trancript for student id: 150121731
LabelingController.py: advisor created Murat Can Ganiz is created
LabelingController.py: advisor created Mustafa Ağaoğlu is created
LabelingController.py: advisor created Betül Boz is created
LabelingController.py: advisor created Çiğdem Eroğlu Erdem is created
LabelingController.py: advisor created Müjdat Soytürk is created
LabelingController.py: advisor created Ali Fuat Alkaya is created
LabelingController.py: advisor created Haluk Rahmi Topçuoğlu is created
LabelingController.py: advisor created Borahan Tümer is created
LabelingController.py: advisor created Ömer Korçak is created
LabelingController.py: advisor created Ali Haydar Özer is created
LabelingController.py: advisor created Sanem Arslan is created
LabelingController.py: advisor created Mehmet Baran is created
LabelingController.py: advisor created Fatma Corut is created
LabelingController.py: Curriculum2015 is created
LabelingController.py: Curriculum2020 is created
factory.py: Looking for locale `en_US` in provider `faker.providers.address`.
factory.py: Provider `faker.providers.address` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.automotive`.
factory.py: Provider `faker.providers.automotive` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.bank`.
factory.py: Specified locale `en_US` is not available for provider `faker.providers.bank`. Locale reset to `en_GB` for this provider.
factory.py: Looking for locale `en_US` in provider `faker.providers.barcode`.
factory.py: Provider `faker.providers.barcode` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.color`.
factory.py: Provider `faker.providers.color` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.company`.
factory.py: Provider `faker.providers.company` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.credit_card`.
factory.py: Provider `faker.providers.credit_card` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.currency`.
factory.py: Provider `faker.providers.currency` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.date_time`.
factory.py: Provider `faker.providers.date_time` has been localized to `en_US`.
factory.py: Provider `faker.providers.file` does not feature localization. Specified locale `en_US` is not utilized for this provider.
factory.py: Looking for locale `en_US` in provider `faker.providers.geo`.
factory.py: Provider `faker.providers.geo` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.internet`.
factory.py: Provider `faker.providers.internet` has been localized to `en_US`.
factory.py: Provider `faker.providers.isbn` does not feature localization. Specified locale `en_US` is not utilized for this provider.
factory.py: Looking for locale `en_US` in provider `faker.providers.job`.
factory.py: Provider `faker.providers.job` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.lorem`.
factory.py: Provider `faker.providers.lorem` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.misc`.
factory.py: Provider `faker.providers.misc` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.person`.
factory.py: Provider `faker.providers.person` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.phone_number`.
factory.py: Provider `faker.providers.phone_number` has been localized to `en_US`.
factory.py: Provider `faker.providers.profile` does not feature localization. Specified locale `en_US` is not utilized for this provider.
factory.py: Provider `faker.providers.python` does not feature localization. Specified locale `en_US` is not utilized for this provider.
factory.py: Looking for locale `en_US` in provider `faker.providers.ssn`.
factory.py: Provider `faker.providers.ssn` has been localized to `en_US`.
factory.py: Provider `faker.providers.user_agent` does not feature localization. Specified locale `en_US` is not utilized for this provider.
RandomizationController.py: Deleted all student input/output files.
RandomizationController.py: Generated student: Jacqueline Waller with id: 150119445
RandomizationController.py: Generated trancript for student id: 150119445
RandomizationController.py: Generated student: Christopher Pearson with id: 150120842
RandomizationController.py: Generated trancript for student id: 150120842
RandomizationController.py: Generated student: Elijah Lewis with id: 150118914
RandomizationController.py: Generated trancript for student id: 150118914
RandomizationController.py: Generated student: Kelly Thompson with id: 150121816
RandomizationController.py: Generated trancript for student id: 150121816
RandomizationController.py: Generated student: Linda Price with id: 150120426
RandomizationController.py: Generated trancript for student id: 150120426
RandomizationController.py: Generated student: Gregory Price with id: 150121901
RandomizationController.py: Generated trancript for student id: 150121901
RandomizationController.py: Generated student: Robert Farrell with id: 150118137
RandomizationController.py: Generated trancript for student id: 150118137
RandomizationController.py: Generated student: Ruth Mcclain with id: 150119681
RandomizationController.py: Generated trancript for student id: 150119681
RandomizationController.py: Generated student: Justin Hicks with id: 150121983
RandomizationController.py: Generated trancript for student id: 150121983
RandomizationController.py: Generated student: Carrie Jackson with id: 150120756
RandomizationController.py: Generated trancript for student id: 150120756
RandomizationController.py: Generated student: Meghan Martinez with id: 150118015
RandomizationController.py: Generated trancript for student id: 150118015
RandomizationController.py: Generated student: Kristen Mcneil with id: 150120006
RandomizationController.py: Generated trancript for student id: 150120006
RandomizationController.py: Generated student: Jamie Henderson with id: 150118518
RandomizationController.py: Generated trancript for student id: 150118518
RandomizationController.py: Generated student: Michele Garcia with id: 150118716
RandomizationController.py: Generated trancript for student id: 150118716
RandomizationController.py: Generated student: Lucas Johnson with id: 150118154
RandomizationController.py: Generated trancript for student id: 150118154
RandomizationController.py: Generated student: Tracy Lee with id: 150120833
RandomizationController.py: Generated trancript for student id: 150120833
RandomizationController.py: Generated student: Angela Hodges with id: 150118605
RandomizationController.py: Generated trancript for student id: 150118605
RandomizationController.py: Generated student: Daniel Leach with id: 150119069
RandomizationController.py: Generated trancript for student id: 150119069
RandomizationController.py: Generated student: Kenneth Smith with id: 150120345
RandomizationController.py: Generated trancript for student id: 150120345
RandomizationController.py: Generated student: Daniel Wilson with id: 150120289
RandomizationController.py: Generated trancript for student id: 150120289
RandomizationController.py: Generated student: Debra Ward with id: 150119989
RandomizationController.py: Generated trancript for student id: 150119989
RandomizationController.py: Generated student: Gerald Miles with id: 150118079
RandomizationController.py: Generated trancript for student id: 150118079
RandomizationController.py: Generated student: Scott Johnson with id: 150119394
RandomizationController.py: Generated trancript for student id: 150119394
RandomizationController.py: Generated student: Kimberly Salazar with id: 150119573
RandomizationController.py: Generated trancript for student id: 150119573
RandomizationController.py: Generated student: Jonathan Taylor with id: 150120145
RandomizationController.py: Generated trancript for student id: 150120145
RandomizationController.py: Generated student: Eugene Prince with id: 150119358
RandomizationController.py: Generated trancript for student id: 150119358
RandomizationController.py: Generated student: Darryl Perez with id: 150118512
RandomizationController.py: Generated trancript for student id: 150118512
RandomizationController.py: Generated student: John Mahoney with id: 150120931
RandomizationController.py: Generated trancript for student id: 150120931
RandomizationController.py: Generated student: Sarah Cruz with id: 150121642
RandomizationController.py: Generated trancript for student id: 150121642
RandomizationController.py: Generated student: Amy Ramirez with id: 150121941
RandomizationController.py: Generated trancript for student id: 150121941
RandomizationController.py: Generated student: Troy Moody with id: 150119272
RandomizationController.py: Generated trancript for student id: 150119272
RandomizationController.py: Generated student: Hailey Perez with id: 150119260
RandomizationController.py: Generated trancript for student id: 150119260
RandomizationController.py: Generated student: Adam Barnes with id: 150120968
RandomizationController.py: Generated trancript for student id: 150120968
RandomizationController.py: Generated student: Taylor Byrd with id: 150120225
RandomizationController.py: Generated trancript for student id: 150120225
RandomizationController.py: Generated student: Monica Garcia with id: 150120781
RandomizationController.py: Generated trancript for student id: 150120781
RandomizationController.py: Generated student: Robin Barnes with id: 150118088
RandomizationController.py: Generated trancript for student id: 150118088
RandomizationController.py: Generated student: Destiny Washington with id: 150119573
RandomizationController.py: Generated trancript for student id: 150119573
RandomizationController.py: Generated student: David James with id: 150118725
RandomizationController.py: Generated trancript for student id: 150118725
RandomizationController.py: Generated student: Amanda Miller with id: 150118891
RandomizationController.py: Generated trancript for student id: 150118891
RandomizationController.py: Generated student: David Bridges with id: 150121327
RandomizationController.py: Generated trancript for student id: 150121327
RandomizationController.py: Generated student: Jeffrey Jones with id: 150119289
RandomizationController.py: Generated trancript for student id: 150119289
RandomizationController.py: Generated student: Luis Allen with id: 150120776
RandomizationController.py: Generated trancript for student id: 150120776
RandomizationController.py: Generated student: Brian Lloyd with id: 150118588
RandomizationController.py: Generated trancript for student id: 150118588
RandomizationController.py: Generated student: Todd Martin with id: 150121375
RandomizationController.py: Generated trancript for student id: 150121375
RandomizationController.py: Generated student: Louis Miller with id: 150121576
RandomizationController.py: Generated trancript for student id: 150121576
RandomizationController.py: Generated student: Michael Salinas with id: 150118345
RandomizationController.py: Generated trancript for student id: 150118345
RandomizationController.py: Generated student: David Bush with id: 150120896
RandomizationController.py: Generated trancript for student id: 150120896
RandomizationController.py: Generated student: Sarah Thompson with id: 150121763
RandomizationController.py: Generated trancript for student id: 150121763
RandomizationController.py: Generated student: Daniel Herring with id: 150119979
RandomizationController.py: Generated trancript for student id: 150119979
RandomizationController.py: Generated student: Daniel Adams with id: 150120368
RandomizationController.py: Generated trancript for student id: 150120368
RandomizationController.py: Generated student: Kristopher Murray with id: 150121790
RandomizationController.py: Generated trancript for student id: 150121790
RandomizationController.py: Generated student: Jacqueline Meyer with id: 150120127
RandomizationController.py: Generated trancript for student id: 150120127
RandomizationController.py: Generated student: Scott Middleton with id: 150118259
RandomizationController.py: Generated trancript for student id: 150118259
RandomizationController.py: Generated student: Nicholas Williams with id: 150119188
RandomizationController.py: Generated trancript for student id: 150119188
RandomizationController.py: Generated student: Brian Johnson with id: 150120989
RandomizationController.py: Generated trancript for student id: 150120989
RandomizationController.py: Generated student: Kenneth Lopez with id: 150120823
RandomizationController.py: Generated trancript for student id: 150120823
RandomizationController.py: Generated student: Ashley Payne with id: 150118847
RandomizationController.py: Generated trancript for student id: 150118847
RandomizationController.py: Generated student: Derek King with id: 150118991
RandomizationController.py: Generated trancript for student id: 150118991
RandomizationController.py: Generated student: Christopher Hickman with id: 150121675
RandomizationController.py: Generated trancript for student id: 150121675
RandomizationController.py: Generated student: Matthew Reed with id: 150121838
RandomizationController.py: Generated trancript for student id: 150121838
RandomizationController.py: Generated student: Jennifer Henderson with id: 150121683
RandomizationController.py: Generated trancript for student id: 150121683
RandomizationController.py: Generated student: Rhonda Green with id: 150120799
RandomizationController.py: Generated trancript for student id: 150120799
RandomizationController.py: Generated student: Scott Gross with id: 150119545
RandomizationController.py: Generated trancript for student id: 150119545
RandomizationController.py: Generated student: Jeffrey Jacobson with id: 150120179
RandomizationController.py: Generated trancript for student id: 150120179
RandomizationController.py: Generated student: Alexander Flores with id: 150120105
RandomizationController.py: Generated trancript for student id: 150120105
RandomizationController.py: Generated student: Robert Matthews with id: 150120621
RandomizationController.py: Generated trancript for student id: 150120621
RandomizationController.py: Generated student: Terry Lee with id: 150118472
RandomizationController.py: Generated trancript for student id: 150118472
RandomizationController.py: Generated student: Heather Joseph with id: 150118787
RandomizationController.py: Generated trancript for student id: 150118787
RandomizationController.py: Generated student: Renee Lee with id: 150121835
RandomizationController.py: Generated trancript for student id: 150121835
RandomizationController.py: Generated student: Heather Phillips with id: 150121771
RandomizationController.py: Generated trancript for student id: 150121771
RandomizationController.py: Generated student: Stacy Jackson with id: 150120950
RandomizationController.py: Generated trancript for student id: 150120950
RandomizationController.py: Generated student: Tiffany Marks with id: 150119861
RandomizationController.py: Generated trancript for student id: 150119861
RandomizationController.py: Generated student: Denise Black with id: 150120814
RandomizationController.py: Generated trancript for student id: 150120814
RandomizationController.py: Generated student: Peter Fowler with id: 150121685
RandomizationController.py: Generated trancript for student id: 150121685
RandomizationController.py: Generated student: John Perez with id: 150119144
RandomizationController.py: Generated trancript for student id: 150119144
RandomizationController.py: Generated student: William Brown with id: 150121915
RandomizationController.py: Generated trancript for student id: 150121915
RandomizationController.py: Generated student: Nathan Walsh with id: 150121722
RandomizationController.py: Generated trancript for student id: 150121722
RandomizationController.py: Generated student: Timothy Hutchinson with id: 150118709
RandomizationController.py: Generated trancript for student id: 150118709
RandomizationController.py: Generated student: Grace Lambert with id: 150118534
RandomizationController.py: Generated trancript for student id: 150118534
RandomizationController.py: Generated student: Jay Juarez with id: 150121022
RandomizationController.py: Generated trancript for student id: 150121022
RandomizationController.py: Generated student: Jeffrey Williams with id: 150121571
RandomizationController.py: Generated trancript for student id: 150121571
RandomizationController.py: Generated student: Meghan Myers with id: 150121223
RandomizationController.py: Generated trancript for student id: 150121223
RandomizationController.py: Generated student: Emily Salinas with id: 150120060
RandomizationController.py: Generated trancript for student id: 150120060
RandomizationController.py: Generated student: Edward Watts with id: 150121616
RandomizationController.py: Generated trancript for student id: 150121616
RandomizationController.py: Generated student: Amy Ward with id: 150120574
RandomizationController.py: Generated trancript for student id: 150120574
RandomizationController.py: Generated student: Sharon Dennis with id: 150121259
RandomizationController.py: Generated trancript for student id: 150121259
RandomizationController.py: Generated student: Tammy Mclaughlin with id: 150119187
RandomizationController.py: Generated trancript for student id: 150119187
RandomizationController.py: Generated student: Nancy Jones with id: 150120512
RandomizationController.py: Generated trancript for student id: 150120512
RandomizationController.py: Generated student: Lucas Strickland with id: 150120633
RandomizationController.py: Generated trancript for student id: 150120633
RandomizationController.py: Generated student: Carolyn Williams with id: 150118061
RandomizationController.py: Generated trancript for student id: 150118061
RandomizationController.py: Generated student: Felicia Alvarado with id: 150119391
RandomizationController.py: Generated trancript for student id: 150119391
RandomizationController.py: Generated student: Gerald Cruz with id: 150118564
RandomizationController.py: Generated trancript for student id: 150118564
RandomizationController.py: Generated student: Jacob Dennis with id: 150120624
RandomizationController.py: Generated trancript for student id: 150120624
RandomizationController.py: Generated student: Stephen White with id: 150121085
RandomizationController.py: Generated trancript for student id: 150121085
RandomizationController.py: Generated student: Courtney Chen with id: 150118932
RandomizationController.py: Generated trancript for student id: 150118932
RandomizationController.py: Generated student: Kevin Brown with id: 150120352
RandomizationController.py: Generated trancript for student id: 150120352
RandomizationController.py: Generated student: Brandon Bishop with id: 150120037
RandomizationController.py: Generated trancript for student id: 150120037
RandomizationController.py: Generated student: Bethany Johnson with id: 150118608
RandomizationController.py: Generated trancript for student id: 150118608
RandomizationController.py: Generated student: Laura Small with id: 150120118
RandomizationController.py: Generated trancript for student id: 150120118
RandomizationController.py: Generated student: Isabella Smith with id: 150119746
RandomizationController.py: Generated trancript for student id: 150119746
RandomizationController.py: Generated student: James Dixon with id: 150118030
RandomizationController.py: Generated trancript for student id: 150118030
RandomizationController.py: Generated student: Cody Thompson with id: 150121389
RandomizationController.py: Generated trancript for student id: 150121389
RandomizationController.py: Generated student: Samantha Weber with id: 150118324
RandomizationController.py: Generated trancript for student id: 150118324
RandomizationController.py: Generated student: Ashley Waller with id: 150120043
RandomizationController.py: Generated trancript for student id: 150120043
RandomizationController.py: Generated student: Cameron Fitzgerald with id: 150120430
RandomizationController.py: Generated trancript for student id: 150120430
RandomizationController.py: Generated student: Amber Kelly with id: 150119573
RandomizationController.py: Generated trancript for student id: 150119573
RandomizationController.py: Generated student: Kristen Meyer with id: 150118615
RandomizationController.py: Generated trancript for student id: 150118615
RandomizationController.py: Generated student: Laura Castro with id: 150120066
RandomizationController.py: Generated trancript for student id: 150120066
RandomizationController.py: Generated student: Dana Gay with id: 150120968
RandomizationController.py: Generated trancript for student id: 150120968
RandomizationController.py: Generated student: Michael Thompson with id: 150119744
RandomizationController.py: Generated trancript for student id: 150119744
RandomizationController.py: Generated student: Kevin Navarro with id: 150119903
RandomizationController.py: Generated trancript for student id: 150119903
RandomizationController.py: Generated student: Jodi Warren with id: 150120350
RandomizationController.py: Generated trancript for student id: 150120350
RandomizationController.py: Generated student: Jose Duncan with id: 150119238
RandomizationController.py: Generated trancript for student id: 150119238
RandomizationController.py: Generated student: Kristina Wolfe with id: 150120927
RandomizationController.py: Generated trancript for student id: 150120927
RandomizationController.py: Generated student: Lori Brown with id: 150120443
RandomizationController.py: Generated trancript for student id: 150120443
RandomizationController.py: Generated student: Michelle Prince with id: 150121071
RandomizationController.py: Generated trancript for student id: 150121071
RandomizationController.py: Generated student: Heidi Smith with id: 150120881
RandomizationController.py: Generated trancript for student id: 150120881
RandomizationController.py: Generated student: Adam Hernandez with id: 150119799
RandomizationController.py: Generated trancript for student id: 150119799
RandomizationController.py: Generated student: Nathan Vaughn with id: 150120938
RandomizationController.py: Generated trancript for student id: 150120938
RandomizationController.py: Generated student: Brianna Taylor with id: 150120313
RandomizationController.py: Generated trancript for student id: 150120313
RandomizationController.py: Generated student: John Mcdaniel with id: 150118638
RandomizationController.py: Generated trancript for student id: 150118638
RandomizationController.py: Generated student: Kelly Johnson with id: 150121544
RandomizationController.py: Generated trancript for student id: 150121544
RandomizationController.py: Generated student: Ann Fuller with id: 150119508
RandomizationController.py: Generated trancript for student id: 150119508
RandomizationController.py: Generated student: Zachary Turner with id: 150120458
RandomizationController.py: Generated trancript for student id: 150120458
RandomizationController.py: Generated student: Robert Mejia with id: 150118658
RandomizationController.py: Generated trancript for student id: 150118658
RandomizationController.py: Generated student: Casey Marquez with id: 150120524
RandomizationController.py: Generated trancript for student id: 150120524
RandomizationController.py: Generated student: Allison Marks with id: 150121782
RandomizationController.py: Generated trancript for student id: 150121782
RandomizationController.py: Generated student: Michael Snyder with id: 150120573
RandomizationController.py: Generated trancript for student id: 150120573
RandomizationController.py: Generated student: Sharon Dunn with id: 150120193
RandomizationController.py: Generated trancript for student id: 150120193
RandomizationController.py: Generated student: Paige Brown with id: 150119823
RandomizationController.py: Generated trancript for student id: 150119823
RandomizationController.py: Generated student: Stephanie Turner with id: 150119018
RandomizationController.py: Generated trancript for student id: 150119018
RandomizationController.py: Generated student: Ronald Grant with id: 150120975
RandomizationController.py: Generated trancript for student id: 150120975
RandomizationController.py: Generated student: Christopher Thomas with id: 150120833
RandomizationController.py: Generated trancript for student id: 150120833
RandomizationController.py: Generated student: Dustin Bates with id: 150120909
RandomizationController.py: Generated trancript for student id: 150120909
RandomizationController.py: Generated student: Peter Hays with id: 150121528
RandomizationController.py: Generated trancript for student id: 150121528
RandomizationController.py: Generated student: Eric Butler with id: 150120545
RandomizationController.py: Generated trancript for student id: 150120545
RandomizationController.py: Generated student: David Sims with id: 150119342
RandomizationController.py: Generated trancript for student id: 150119342
RandomizationController.py: Generated student: John Webster with id: 150120894
RandomizationController.py: Generated trancript for student id: 150120894
RandomizationController.py: Generated student: Timothy Perez with id: 150121712
RandomizationController.py: Generated trancript for student id: 150121712
RandomizationController.py: Generated student: Dawn Frey with id: 150118740
RandomizationController.py: Generated trancript for student id: 150118740
RandomizationController.py: Generated student: Brandon Foley with id: 150119065
RandomizationController.py: Generated trancript for student id: 150119065
LabelingController.py: advisor created Murat Can Ganiz is created
LabelingController.py: advisor created Mustafa Ağaoğlu is created
LabelingController.py: advisor created Betül Boz is created
LabelingController.py: advisor created Çiğdem Eroğlu Erdem is created
LabelingController.py: advisor created Müjdat Soytürk is created
LabelingController.py: advisor created Ali Fuat Alkaya is created
LabelingController.py: advisor created Haluk Rahmi Topçuoğlu is created
LabelingController.py: advisor created Borahan Tümer is created
LabelingController.py: advisor created Ömer Korçak is created
LabelingController.py: advisor created Ali Haydar Özer is created
LabelingController.py: advisor created Sanem Arslan is created
LabelingController.py: advisor created Mehmet Baran is created
LabelingController.py: advisor created Fatma Corut is created
LabelingController.py: Curriculum2015 is created
LabelingController.py: Curriculum2020 is created
factory.py: Looking for locale `en_US` in provider `faker.providers.address`.
factory.py: Provider `faker.providers.address` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.automotive`.
factory.py: Provider `faker.providers.automotive` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.bank`.
factory.py: Specified locale `en_US` is not available for provider `faker.providers.bank`. Locale reset to `en_GB` for this provider.
factory.py: Looking for locale `en_US` in provider `faker.providers.barcode`.
factory.py: Provider `faker.providers.barcode` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.color`.
factory.py: Provider `faker.providers.color` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.company`.
factory.py: Provider `faker.providers.company` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.credit_card`.
factory.py: Provider `faker.providers.credit_card` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.currency`.
factory.py: Provider `faker.providers.currency` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.date_time`.
factory.py: Provider `faker.providers.date_time` has been localized to `en_US`.
factory.py: Provider `faker.providers.file` does not feature localization. Specified locale `en_US` is not utilized for this provider.
factory.py: Looking for locale `en_US` in provider `faker.providers.geo`.
factory.py: Provider `faker.providers.geo` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.internet`.
factory.py: Provider `faker.providers.internet` has been localized to `en_US`.
factory.py: Provider `faker.providers.isbn` does not feature localization. Specified locale `en_US` is not utilized for this provider.
factory.py: Looking for locale `en_US` in provider `faker.providers.job`.
factory.py: Provider `faker.providers.job` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.lorem`.
factory.py: Provider `faker.providers.lorem` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.misc`.
factory.py: Provider `faker.providers.misc` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.person`.
factory.py: Provider `faker.providers.person` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.phone_number`.
factory.py: Provider `faker.providers.phone_number` has been localized to `en_US`.
factory.py: Provider `faker.providers.profile` does not feature localization. Specified locale `en_US` is not utilized for this provider.
factory.py: Provider `faker.providers.python` does not feature localization. Specified locale `en_US` is not utilized for this provider.
factory.py: Looking for locale `en_US` in provider `faker.providers.ssn`.
factory.py: Provider `faker.providers.ssn` has been localized to `en_US`.
factory.py: Provider `faker.providers.user_agent` does not feature localization. Specified locale `en_US` is not utilized for this provider.
RandomizationController.py: Deleted all student input/output files.
RandomizationController.py: Generated student: Devin Bell with id: 150120041
RandomizationController.py: Generated trancript for student id: 150120041
RandomizationController.py: Generated student: Melanie Kim with id: 150119982
RandomizationController.py: Generated trancript for student id: 150119982
RandomizationController.py: Generated student: Deborah Burns with id: 150119914
RandomizationController.py: Generated trancript for student id: 150119914
RandomizationController.py: Generated student: Robert Berry with id: 150118624
RandomizationController.py: Generated trancript for student id: 150118624
RandomizationController.py: Generated student: Wendy Maldonado with id: 150118524
RandomizationController.py: Generated trancript for student id: 150118524
RandomizationController.py: Generated student: Garrett Buckley with id: 150121407
RandomizationController.py: Generated trancript for student id: 150121407
RandomizationController.py: Generated student: Scott Stanley with id: 150120325
RandomizationController.py: Generated trancript for student id: 150120325
RandomizationController.py: Generated student: Lindsay Perez with id: 150119699
RandomizationController.py: Generated trancript for student id: 150119699
RandomizationController.py: Generated student: William Bates with id: 150118273
RandomizationController.py: Generated trancript for student id: 150118273
RandomizationController.py: Generated student: Melody Potter with id: 150118639
RandomizationController.py: Generated trancript for student id: 150118639
RandomizationController.py: Generated student: James Garcia with id: 150120138
RandomizationController.py: Generated trancript for student id: 150120138
RandomizationController.py: Generated student: Christian Boyle with id: 150120487
RandomizationController.py: Generated trancript for student id: 150120487
RandomizationController.py: Generated student: Zachary Callahan with id: 150120678
RandomizationController.py: Generated trancript for student id: 150120678
RandomizationController.py: Generated student: Sara Stevenson with id: 150120459
RandomizationController.py: Generated trancript for student id: 150120459
RandomizationController.py: Generated student: Brandon Yoder with id: 150119064
RandomizationController.py: Generated trancript for student id: 150119064
RandomizationController.py: Generated student: Harold Crawford with id: 150120051
RandomizationController.py: Generated trancript for student id: 150120051
RandomizationController.py: Generated student: Gordon Sanders with id: 150119581
RandomizationController.py: Generated trancript for student id: 150119581
RandomizationController.py: Generated student: Juan Cooper with id: 150119607
RandomizationController.py: Generated trancript for student id: 150119607
RandomizationController.py: Generated student: Tracy Williams with id: 150121578
RandomizationController.py: Generated trancript for student id: 150121578
RandomizationController.py: Generated student: Michael James with id: 150121371
RandomizationController.py: Generated trancript for student id: 150121371
RandomizationController.py: Generated student: Julie Robbins with id: 150119482
RandomizationController.py: Generated trancript for student id: 150119482
RandomizationController.py: Generated student: Sarah Bates with id: 150119460
RandomizationController.py: Generated trancript for student id: 150119460
RandomizationController.py: Generated student: Rebecca Sandoval with id: 150119989
RandomizationController.py: Generated trancript for student id: 150119989
RandomizationController.py: Generated student: Lisa Johnston with id: 150119522
RandomizationController.py: Generated trancript for student id: 150119522
RandomizationController.py: Generated student: William Craig with id: 150120960
RandomizationController.py: Generated trancript for student id: 150120960
RandomizationController.py: Generated student: Carol White with id: 150119088
RandomizationController.py: Generated trancript for student id: 150119088
RandomizationController.py: Generated student: Christina Williams with id: 150120560
RandomizationController.py: Generated trancript for student id: 150120560
RandomizationController.py: Generated student: Julie Sanders with id: 150121572
RandomizationController.py: Generated trancript for student id: 150121572
RandomizationController.py: Generated student: Robert Dalton with id: 150121175
RandomizationController.py: Generated trancript for student id: 150121175
RandomizationController.py: Generated student: Tammy Walker with id: 150118999
RandomizationController.py: Generated trancript for student id: 150118999
RandomizationController.py: Generated student: Henry Clay with id: 150118201
RandomizationController.py: Generated trancript for student id: 150118201
RandomizationController.py: Generated student: Susan Cooke with id: 150120050
RandomizationController.py: Generated trancript for student id: 150120050
RandomizationController.py: Generated student: Crystal Daniels with id: 150120785
RandomizationController.py: Generated trancript for student id: 150120785
RandomizationController.py: Generated student: Kelly Daniels with id: 150121694
RandomizationController.py: Generated trancript for student id: 150121694
RandomizationController.py: Generated student: Jeffery Richardson with id: 150120568
RandomizationController.py: Generated trancript for student id: 150120568
RandomizationController.py: Generated student: Wesley Jones with id: 150120213
RandomizationController.py: Generated trancript for student id: 150120213
RandomizationController.py: Generated student: David Lowery with id: 150121150
RandomizationController.py: Generated trancript for student id: 150121150
RandomizationController.py: Generated student: Sandra Bond with id: 150121662
RandomizationController.py: Generated trancript for student id: 150121662
RandomizationController.py: Generated student: Laurie Pace with id: 150118876
RandomizationController.py: Generated trancript for student id: 150118876
RandomizationController.py: Generated student: Edward Miller with id: 150119493
RandomizationController.py: Generated trancript for student id: 150119493
RandomizationController.py: Generated student: Amy Anderson with id: 150118431
RandomizationController.py: Generated trancript for student id: 150118431
RandomizationController.py: Generated student: Sandra Brown with id: 150121721
RandomizationController.py: Generated trancript for student id: 150121721
RandomizationController.py: Generated student: Kevin Peterson with id: 150121456
RandomizationController.py: Generated trancript for student id: 150121456
RandomizationController.py: Generated student: Sarah Morton with id: 150120944
RandomizationController.py: Generated trancript for student id: 150120944
RandomizationController.py: Generated student: Vincent Rowland with id: 150118064
RandomizationController.py: Generated trancript for student id: 150118064
RandomizationController.py: Generated student: Joshua Ward with id: 150119030
RandomizationController.py: Generated trancript for student id: 150119030
RandomizationController.py: Generated student: Jerry Kerr with id: 150118447
RandomizationController.py: Generated trancript for student id: 150118447
RandomizationController.py: Generated student: Elizabeth Rodriguez with id: 150121542
RandomizationController.py: Generated trancript for student id: 150121542
RandomizationController.py: Generated student: Tina Nelson with id: 150119742
RandomizationController.py: Generated trancript for student id: 150119742
RandomizationController.py: Generated student: Jackson English with id: 150120148
RandomizationController.py: Generated trancript for student id: 150120148
RandomizationController.py: Generated student: Ryan Potts with id: 150121899
RandomizationController.py: Generated trancript for student id: 150121899
RandomizationController.py: Generated student: Gina White with id: 150119367
RandomizationController.py: Generated trancript for student id: 150119367
RandomizationController.py: Generated student: Thomas Cook with id: 150121647
RandomizationController.py: Generated trancript for student id: 150121647
RandomizationController.py: Generated student: Richard Shepherd with id: 150121771
RandomizationController.py: Generated trancript for student id: 150121771
RandomizationController.py: Generated student: Christopher Smith with id: 150120916
RandomizationController.py: Generated trancript for student id: 150120916
RandomizationController.py: Generated student: Andrea Walker with id: 150120273
RandomizationController.py: Generated trancript for student id: 150120273
RandomizationController.py: Generated student: Melanie Tran with id: 150120101
RandomizationController.py: Generated trancript for student id: 150120101
RandomizationController.py: Generated student: David Ramirez with id: 150118370
RandomizationController.py: Generated trancript for student id: 150118370
RandomizationController.py: Generated student: Brooke Stephens with id: 150119051
RandomizationController.py: Generated trancript for student id: 150119051
RandomizationController.py: Generated student: Laura Scott with id: 150121827
RandomizationController.py: Generated trancript for student id: 150121827
RandomizationController.py: Generated student: David Rodgers with id: 150120040
RandomizationController.py: Generated trancript for student id: 150120040
RandomizationController.py: Generated student: Victoria Powell with id: 150120014
RandomizationController.py: Generated trancript for student id: 150120014
RandomizationController.py: Generated student: Samantha Diaz with id: 150119019
RandomizationController.py: Generated trancript for student id: 150119019
RandomizationController.py: Generated student: Andrea Salinas with id: 150119211
RandomizationController.py: Generated trancript for student id: 150119211
RandomizationController.py: Generated student: Nicole Mitchell with id: 150118312
RandomizationController.py: Generated trancript for student id: 150118312
RandomizationController.py: Generated student: Kyle Robertson with id: 150120120
RandomizationController.py: Generated trancript for student id: 150120120
RandomizationController.py: Generated student: Kristine Howell with id: 150121654
RandomizationController.py: Generated trancript for student id: 150121654
RandomizationController.py: Generated student: Jeanne Franklin with id: 150118394
RandomizationController.py: Generated trancript for student id: 150118394
RandomizationController.py: Generated student: Jon Henderson with id: 150118580
RandomizationController.py: Generated trancript for student id: 150118580
RandomizationController.py: Generated student: Damon Wells with id: 150121792
RandomizationController.py: Generated trancript for student id: 150121792
RandomizationController.py: Generated student: John Anderson with id: 150118855
RandomizationController.py: Generated trancript for student id: 150118855
RandomizationController.py: Generated student: Richard Miller with id: 150121707
RandomizationController.py: Generated trancript for student id: 150121707
RandomizationController.py: Generated student: Laura Thomas with id: 150119762
RandomizationController.py: Generated trancript for student id: 150119762
RandomizationController.py: Generated student: Timothy Willis with id: 150119853
RandomizationController.py: Generated trancript for student id: 150119853
RandomizationController.py: Generated student: Jason Lara with id: 150119517
RandomizationController.py: Generated trancript for student id: 150119517
RandomizationController.py: Generated student: Isabella Coleman with id: 150121844
RandomizationController.py: Generated trancript for student id: 150121844
RandomizationController.py: Generated student: Richard Bullock with id: 150121486
RandomizationController.py: Generated trancript for student id: 150121486
RandomizationController.py: Generated student: Lee Solomon with id: 150118844
RandomizationController.py: Generated trancript for student id: 150118844
RandomizationController.py: Generated student: Luis Robinson with id: 150118990
RandomizationController.py: Generated trancript for student id: 150118990
RandomizationController.py: Generated student: Samuel Edwards with id: 150118190
RandomizationController.py: Generated trancript for student id: 150118190
RandomizationController.py: Generated student: Jose Phillips with id: 150118854
RandomizationController.py: Generated trancript for student id: 150118854
RandomizationController.py: Generated student: Pamela Klein with id: 150120416
RandomizationController.py: Generated trancript for student id: 150120416
RandomizationController.py: Generated student: Timothy Salazar with id: 150118703
RandomizationController.py: Generated trancript for student id: 150118703
RandomizationController.py: Generated student: Mark Kelly with id: 150121667
RandomizationController.py: Generated trancript for student id: 150121667
RandomizationController.py: Generated student: Ashley Ray with id: 150121609
RandomizationController.py: Generated trancript for student id: 150121609
RandomizationController.py: Generated student: Melissa Jones with id: 150120122
RandomizationController.py: Generated trancript for student id: 150120122
RandomizationController.py: Generated student: Sarah Mccoy with id: 150121282
RandomizationController.py: Generated trancript for student id: 150121282
RandomizationController.py: Generated student: Michael Larson with id: 150120703
RandomizationController.py: Generated trancript for student id: 150120703
RandomizationController.py: Generated student: Amy Powell with id: 150121142
RandomizationController.py: Generated trancript for student id: 150121142
RandomizationController.py: Generated student: Joe Myers with id: 150120050
RandomizationController.py: Generated trancript for student id: 150120050
RandomizationController.py: Generated student: Robin Mitchell with id: 150118546
RandomizationController.py: Generated trancript for student id: 150118546
RandomizationController.py: Generated student: Emily Flynn with id: 150118959
RandomizationController.py: Generated trancript for student id: 150118959
RandomizationController.py: Generated student: Aaron Love with id: 150120261
RandomizationController.py: Generated trancript for student id: 150120261
RandomizationController.py: Generated student: Melinda Villanueva with id: 150118193
RandomizationController.py: Generated trancript for student id: 150118193
RandomizationController.py: Generated student: Connie White with id: 150119297
RandomizationController.py: Generated trancript for student id: 150119297
RandomizationController.py: Generated student: Erika Thomas with id: 150119020
RandomizationController.py: Generated trancript for student id: 150119020
RandomizationController.py: Generated student: Robert Chen with id: 150119067
RandomizationController.py: Generated trancript for student id: 150119067
RandomizationController.py: Generated student: Marvin Hammond with id: 150120540
RandomizationController.py: Generated trancript for student id: 150120540
RandomizationController.py: Generated student: David Day with id: 150118387
RandomizationController.py: Generated trancript for student id: 150118387
RandomizationController.py: Generated student: Allison Hale with id: 150119029
RandomizationController.py: Generated trancript for student id: 150119029
RandomizationController.py: Generated student: Angie Jackson with id: 150121859
RandomizationController.py: Generated trancript for student id: 150121859
RandomizationController.py: Generated student: Alyssa Jordan with id: 150119332
RandomizationController.py: Generated trancript for student id: 150119332
RandomizationController.py: Generated student: Douglas Zavala with id: 150120081
RandomizationController.py: Generated trancript for student id: 150120081
RandomizationController.py: Generated student: Stacy Smith with id: 150118587
RandomizationController.py: Generated trancript for student id: 150118587
RandomizationController.py: Generated student: Taylor Lopez with id: 150121076
RandomizationController.py: Generated trancript for student id: 150121076
RandomizationController.py: Generated student: Aaron Shepard with id: 150119440
RandomizationController.py: Generated trancript for student id: 150119440
RandomizationController.py: Generated student: Rhonda Love with id: 150118639
RandomizationController.py: Generated trancript for student id: 150118639
RandomizationController.py: Generated student: Stephen Wood with id: 150121457
RandomizationController.py: Generated trancript for student id: 150121457
RandomizationController.py: Generated student: Kimberly Campos with id: 150120615
RandomizationController.py: Generated trancript for student id: 150120615
RandomizationController.py: Generated student: Alan Owens with id: 150118169
RandomizationController.py: Generated trancript for student id: 150118169
RandomizationController.py: Generated student: James Parker with id: 150118931
RandomizationController.py: Generated trancript for student id: 150118931
RandomizationController.py: Generated student: Terri Jones with id: 150118969
RandomizationController.py: Generated trancript for student id: 150118969
RandomizationController.py: Generated student: Brendan Jones with id: 150119434
RandomizationController.py: Generated trancript for student id: 150119434
RandomizationController.py: Generated student: Craig Calhoun with id: 150119498
RandomizationController.py: Generated trancript for student id: 150119498
RandomizationController.py: Generated student: Peter Hensley with id: 150118751
RandomizationController.py: Generated trancript for student id: 150118751
RandomizationController.py: Generated student: Caitlin Sanders with id: 150121448
RandomizationController.py: Generated trancript for student id: 150121448
RandomizationController.py: Generated student: Ashley Richmond with id: 150119914
RandomizationController.py: Generated trancript for student id: 150119914
RandomizationController.py: Generated student: Julie Riddle with id: 150120776
RandomizationController.py: Generated trancript for student id: 150120776
RandomizationController.py: Generated student: Amanda Foster with id: 150120966
RandomizationController.py: Generated trancript for student id: 150120966
RandomizationController.py: Generated student: Mark York with id: 150119244
RandomizationController.py: Generated trancript for student id: 150119244
RandomizationController.py: Generated student: Lucas Brown with id: 150121064
RandomizationController.py: Generated trancript for student id: 150121064
RandomizationController.py: Generated student: Teresa Riley with id: 150119501
RandomizationController.py: Generated trancript for student id: 150119501
RandomizationController.py: Generated student: Samantha Shah with id: 150120013
RandomizationController.py: Generated trancript for student id: 150120013
RandomizationController.py: Generated student: Richard Hood with id: 150120260
RandomizationController.py: Generated trancript for student id: 150120260
RandomizationController.py: Generated student: Heather Butler with id: 150121311
RandomizationController.py: Generated trancript for student id: 150121311
RandomizationController.py: Generated student: Stephen Yang with id: 150121032
RandomizationController.py: Generated trancript for student id: 150121032
RandomizationController.py: Generated student: Victor Knight with id: 150120589
RandomizationController.py: Generated trancript for student id: 150120589
RandomizationController.py: Generated student: Jeffrey Fowler with id: 150118173
RandomizationController.py: Generated trancript for student id: 150118173
RandomizationController.py: Generated student: James Ball with id: 150121657
RandomizationController.py: Generated trancript for student id: 150121657
RandomizationController.py: Generated student: Robert Davis with id: 150121386
RandomizationController.py: Generated trancript for student id: 150121386
RandomizationController.py: Generated student: Bradley Morales with id: 150118441
RandomizationController.py: Generated trancript for student id: 150118441
RandomizationController.py: Generated student: Ashley Haas with id: 150118076
RandomizationController.py: Generated trancript for student id: 150118076
RandomizationController.py: Generated student: James Brown with id: 150118742
RandomizationController.py: Generated trancript for student id: 150118742
RandomizationController.py: Generated student: Danny Shelton with id: 150118466
RandomizationController.py: Generated trancript for student id: 150118466
RandomizationController.py: Generated student: Jared Baker with id: 150121186
RandomizationController.py: Generated trancript for student id: 150121186
RandomizationController.py: Generated student: Olivia Nelson with id: 150118664
RandomizationController.py: Generated trancript for student id: 150118664
RandomizationController.py: Generated student: Justin Cooper with id: 150121194
RandomizationController.py: Generated trancript for student id: 150121194
RandomizationController.py: Generated student: Kimberly Allen with id: 150120573
RandomizationController.py: Generated trancript for student id: 150120573
RandomizationController.py: Generated student: Gregory Compton with id: 150120991
RandomizationController.py: Generated trancript for student id: 150120991
RandomizationController.py: Generated student: Jennifer Wilson with id: 150121978
RandomizationController.py: Generated trancript for student id: 150121978
RandomizationController.py: Generated student: George Roberts with id: 150121918
RandomizationController.py: Generated trancript for student id: 150121918
RandomizationController.py: Generated student: Garrett Davis with id: 150121534
RandomizationController.py: Generated trancript for student id: 150121534
RandomizationController.py: Generated student: Amber Baker with id: 150119984
RandomizationController.py: Generated trancript for student id: 150119984
RandomizationController.py: Generated student: Amy Gonzalez with id: 150118993
RandomizationController.py: Generated trancript for student id: 150118993
RandomizationController.py: Generated student: Maria Davis with id: 150118712
RandomizationController.py: Generated trancript for student id: 150118712
RandomizationController.py: Generated student: Marilyn Young with id: 150118565
RandomizationController.py: Generated trancript for student id: 150118565
RandomizationController.py: Generated student: Donna Browning with id: 150121876
RandomizationController.py: Generated trancript for student id: 150121876
RandomizationController.py: Generated student: Douglas Alexander with id: 150118625
RandomizationController.py: Generated trancript for student id: 150118625
RandomizationController.py: Generated student: April Conrad with id: 150120295
RandomizationController.py: Generated trancript for student id: 150120295
RandomizationController.py: Generated student: Diane Jackson with id: 150121300
RandomizationController.py: Generated trancript for student id: 150121300
RandomizationController.py: Generated student: Richard Long with id: 150118020
RandomizationController.py: Generated trancript for student id: 150118020
RandomizationController.py: Generated student: Kyle Mills with id: 150120305
RandomizationController.py: Generated trancript for student id: 150120305
RandomizationController.py: Generated student: Kyle Reynolds with id: 150120562
RandomizationController.py: Generated trancript for student id: 150120562
RandomizationController.py: Generated student: Melissa Copeland with id: 150120320
RandomizationController.py: Generated trancript for student id: 150120320
RandomizationController.py: Generated student: Monica Bishop with id: 150121666
RandomizationController.py: Generated trancript for student id: 150121666
RandomizationController.py: Generated student: Rickey Russo with id: 150118903
RandomizationController.py: Generated trancript for student id: 150118903
RandomizationController.py: Generated student: Jared Tate with id: 150118963
RandomizationController.py: Generated trancript for student id: 150118963
RandomizationController.py: Generated student: Jessica Guerra with id: 150119661
RandomizationController.py: Generated trancript for student id: 150119661
RandomizationController.py: Generated student: Suzanne Jackson with id: 150121028
RandomizationController.py: Generated trancript for student id: 150121028
RandomizationController.py: Generated student: Benjamin Perkins with id: 150121461
RandomizationController.py: Generated trancript for student id: 150121461
RandomizationController.py: Generated student: Jennifer Patel with id: 150118865
RandomizationController.py: Generated trancript for student id: 150118865
RandomizationController.py: Generated student: Nathan Duncan with id: 150121475
RandomizationController.py: Generated trancript for student id: 150121475
RandomizationController.py: Generated student: Crystal Jones with id: 150118318
RandomizationController.py: Generated trancript for student id: 150118318
RandomizationController.py: Generated student: Michael Moreno with id: 150121430
RandomizationController.py: Generated trancript for student id: 150121430
RandomizationController.py: Generated student: Steven Stevenson with id: 150120190
RandomizationController.py: Generated trancript for student id: 150120190
RandomizationController.py: Generated student: Robert Shields with id: 150120533
RandomizationController.py: Generated trancript for student id: 150120533
RandomizationController.py: Generated student: Lisa Rodriguez with id: 150119686
RandomizationController.py: Generated trancript for student id: 150119686
RandomizationController.py: Generated student: Kimberly Richardson with id: 150120192
RandomizationController.py: Generated trancript for student id: 150120192
RandomizationController.py: Generated student: Jonathan Watson with id: 150119505
RandomizationController.py: Generated trancript for student id: 150119505
RandomizationController.py: Generated student: Adam Campbell with id: 150120920
RandomizationController.py: Generated trancript for student id: 150120920
RandomizationController.py: Generated student: Karen Hoffman with id: 150119495
RandomizationController.py: Generated trancript for student id: 150119495
LabelingController.py: advisor created Murat Can Ganiz is created
LabelingController.py: advisor created Mustafa Ağaoğlu is created
LabelingController.py: advisor created Betül Boz is created
LabelingController.py: advisor created Çiğdem Eroğlu Erdem is created
LabelingController.py: advisor created Müjdat Soytürk is created
LabelingController.py: advisor created Ali Fuat Alkaya is created
LabelingController.py: advisor created Haluk Rahmi Topçuoğlu is created
LabelingController.py: advisor created Borahan Tümer is created
LabelingController.py: advisor created Ömer Korçak is created
LabelingController.py: advisor created Ali Haydar Özer is created
LabelingController.py: advisor created Sanem Arslan is created
LabelingController.py: advisor created Mehmet Baran is created
LabelingController.py: advisor created Fatma Corut is created
LabelingController.py: Curriculum2015 is created
LabelingController.py: Curriculum2020 is created
factory.py: Looking for locale `en_US` in provider `faker.providers.address`.
factory.py: Provider `faker.providers.address` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.automotive`.
factory.py: Provider `faker.providers.automotive` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.bank`.
factory.py: Specified locale `en_US` is not available for provider `faker.providers.bank`. Locale reset to `en_GB` for this provider.
factory.py: Looking for locale `en_US` in provider `faker.providers.barcode`.
factory.py: Provider `faker.providers.barcode` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.color`.
factory.py: Provider `faker.providers.color` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.company`.
factory.py: Provider `faker.providers.company` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.credit_card`.
factory.py: Provider `faker.providers.credit_card` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.currency`.
factory.py: Provider `faker.providers.currency` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.date_time`.
factory.py: Provider `faker.providers.date_time` has been localized to `en_US`.
factory.py: Provider `faker.providers.file` does not feature localization. Specified locale `en_US` is not utilized for this provider.
factory.py: Looking for locale `en_US` in provider `faker.providers.geo`.
factory.py: Provider `faker.providers.geo` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.internet`.
factory.py: Provider `faker.providers.internet` has been localized to `en_US`.
factory.py: Provider `faker.providers.isbn` does not feature localization. Specified locale `en_US` is not utilized for this provider.
factory.py: Looking for locale `en_US` in provider `faker.providers.job`.
factory.py: Provider `faker.providers.job` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.lorem`.
factory.py: Provider `faker.providers.lorem` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.misc`.
factory.py: Provider `faker.providers.misc` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.person`.
factory.py: Provider `faker.providers.person` has been localized to `en_US`.
factory.py: Looking for locale `en_US` in provider `faker.providers.phone_number`.
factory.py: Provider `faker.providers.phone_number` has been localized to `en_US`.
factory.py: Provider `faker.providers.profile` does not feature localization. Specified locale `en_US` is not utilized for this provider.
factory.py: Provider `faker.providers.python` does not feature localization. Specified locale `en_US` is not utilized for this provider.
factory.py: Looking for locale `en_US` in provider `faker.providers.ssn`.
factory.py: Provider `faker.providers.ssn` has been localized to `en_US`.
factory.py: Provider `faker.providers.user_agent` does not feature localization. Specified locale `en_US` is not utilized for this provider.
RandomizationController.py: Deleted all student input/output files.
RandomizationController.py: Generated student: Stephen Smith with id: 150118843
RandomizationController.py: Generated trancript for student id: 150118843
RandomizationController.py: Generated student: Yolanda Hall with id: 150118055
RandomizationController.py: Generated trancript for student id: 150118055
RandomizationController.py: Generated student: Sandra Rodriguez with id: 150121965
RandomizationController.py: Generated trancript for student id: 150121965
RandomizationController.py: Generated student: Jorge Harding with id: 150118849
RandomizationController.py: Generated trancript for student id: 150118849
RandomizationController.py: Generated student: Jimmy Cunningham with id: 150120628
RandomizationController.py: Generated trancript for student id: 150120628
RandomizationController.py: Generated student: Robert Adams with id: 150119973
RandomizationController.py: Generated trancript for student id: 150119973
RandomizationController.py: Generated student: Deborah Shelton with id: 150119769
RandomizationController.py: Generated trancript for student id: 150119769
RandomizationController.py: Generated student: Anthony Johnson with id: 150120211
RandomizationController.py: Generated trancript for student id: 150120211
RandomizationController.py: Generated student: Shelley Estrada with id: 150121628
RandomizationController.py: Generated trancript for student id: 150121628
RandomizationController.py: Generated student: Michelle Padilla with id: 150120975
RandomizationController.py: Generated trancript for student id: 150120975
RandomizationController.py: Generated student: Linda Brown with id: 150120273
RandomizationController.py: Generated trancript for student id: 150120273
RandomizationController.py: Generated student: Shane Santiago with id: 150118532
RandomizationController.py: Generated trancript for student id: 150118532
RandomizationController.py: Generated student: Sandra Austin with id: 150121786
RandomizationController.py: Generated trancript for student id: 150121786
RandomizationController.py: Generated student: Justin Silva with id: 150118290
RandomizationController.py: Generated trancript for student id: 150118290
RandomizationController.py: Generated student: Matthew Carroll with id: 150118595
RandomizationController.py: Generated trancript for student id: 150118595
RandomizationController.py: Generated student: Frank Walker with id: 150119726
RandomizationController.py: Generated trancript for student id: 150119726
RandomizationController.py: Generated student: Monique Ford with id: 150120572
RandomizationController.py: Generated trancript for student id: 150120572
RandomizationController.py: Generated student: Craig Buchanan with id: 150119758
RandomizationController.py: Generated trancript for student id: 150119758
RandomizationController.py: Generated student: Heather Myers with id: 150121394
RandomizationController.py: Generated trancript for student id: 150121394
RandomizationController.py: Generated student: Shane Cook with id: 150119146
RandomizationController.py: Generated trancript for student id: 150119146
RandomizationController.py: Generated student: Kiara Sutton with id: 150118778
RandomizationController.py: Generated trancript for student id: 150118778
RandomizationController.py: Generated student: Kristine Jones with id: 150118365
RandomizationController.py: Generated trancript for student id: 150118365
RandomizationController.py: Generated student: Emily Edwards with id: 150121408
RandomizationController.py: Generated trancript for student id: 150121408
RandomizationController.py: Generated student: Derrick Johnson with id: 150118611
RandomizationController.py: Generated trancript for student id: 150118611
RandomizationController.py: Generated student: Denise Stephens with id: 150118789
RandomizationController.py: Generated trancript for student id: 150118789
RandomizationController.py: Generated student: Barbara Anderson with id: 150120904
RandomizationController.py: Generated trancript for student id: 150120904
RandomizationController.py: Generated student: Sandra Tucker with id: 150119307
RandomizationController.py: Generated trancript for student id: 150119307
RandomizationController.py: Generated student: Robert Ortiz with id: 150120113
RandomizationController.py: Generated trancript for student id: 150120113
RandomizationController.py: Generated student: Robert Jackson with id: 150121526
RandomizationController.py: Generated trancript for student id: 150121526
RandomizationController.py: Generated student: Daniel Choi with id: 150121600
RandomizationController.py: Generated trancript for student id: 150121600
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
Advisor.py: courseAvailability method is called and advisor check the course availability.
Student.py: Checked if the course is completed before and it is not completed. Added to selected courses
